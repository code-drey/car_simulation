<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="Street_network_model" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.1_20180619">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8000000000000042">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{-577.5050251256281, 96.12060301507529}">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-235.0, -365.0]">
        </property>
    </property>
    <property name="StreetPlotterFlag" class="ptolemy.data.expr.Parameter" value="1">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-290.0, -325.0}">
        </property>
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="false">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This is a simple traffic model, consisting of a few T-intersections,cross-intersections and streets.&#10;The Input ist controlled through a discrete clock, connected with a CSV-Reader, where our cars are&#10;put into the model. The key-part of the model is the analysis of the overloaded streets and intersections,&#10;if heavy traffic occurs (seen on the analysis) models can easily be configured.&#10;The minimum streetLength is 4 for 6 cars(cars.txt), 5 for 25 cars(cars_25.txt), 6 for 40 cars(cars_40.txt).&#10;&#10;Parameter &quot;StreetPlotterFlag&quot;: if 1 it shows the analysis of how many cars pass the street on the plotters,&#10;                                                 if 0 only empty plotters appear.&#10;Parameter &quot;StreetFlagAvgTime&quot;: if 1 it shows the analysis of averagetime passing a street on the display, &#10;                                                     if 0 only empty display appear&#10;Parameter &quot;IntersectionFlagAvgTime&quot;: if 1 it shows the analysis of averagetime passing an intersection on the display, &#10;                                                             if 0 only empty display appear&#10;Parameter &quot;streetLength&quot;: changes the length of all streets.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-120.0, -500.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.4,0.4,0.4,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Sofia Bonini, Michael Breckner, Andrea Hofer">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-120.0, -265.0]">
        </property>
    </property>
    <property name="streetLength" class="ptolemy.data.expr.Parameter" value="8">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-290.0, -285.0]">
        </property>
    </property>
    <property name="StreetFlagAvgTime" class="ptolemy.data.expr.Parameter" value="0">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-290.0, -305.0]">
        </property>
    </property>
    <property name="IntersectionFlagAvgTime" class="ptolemy.data.expr.Parameter" value="0">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-290.0, -265.0]">
        </property>
    </property>
    <entity name="T-Intersection (1)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[40.0, -140.0]">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={217, 54, 928, 616}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 499]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8000000000000003">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{436.5500157035176, 392.4077418341708}">
        </property>
        <property name="intersectionId" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="4">
        </property>
        <property name="WEST" class="ptolemy.data.expr.Parameter" value="10">
        </property>
        <property name="EAST" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="italic" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="intersection-model that consists of &quot;setIndicator&quot; from each direction,&#10;that sets the indicator of the cars accordingly to their wanted direction.&#10;In the intersection the cars are sent to their prior setIndicator-direction.&#10;The two TimedPlotter are analysis tools for checking the workload.&#10;The AvgTime Actor computes the average waiting time in this intersection and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[125.0, 130.0]">
            </property>
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="IntersectionFlagAvgTime">
        </property>
        <port name="outputEast" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[625.0, 455.0]">
            </property>
        </port>
        <port name="inputWest" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[70.0, 385.0]">
            </property>
        </port>
        <port name="outputWest" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[85.0, 465.0]">
            </property>
        </port>
        <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[45.0, 590.0]">
            </property>
        </port>
        <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[430.0, 650.0]">
            </property>
        </port>
        <port name="inputEast" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[625.0, 415.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
        </port>
        <entity name="T-Intersection Right-Hand-Rule" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// each intersection contains a street segment prior to the intersection, which is being analyzed by the counter&#10;//the street queues&#10;var queueW = [];&#10;var queueE = []; &#10;var queueS = [];&#10;var carCount = 0; // indicates number of cars currently in the intersection&#10;	&#10;// counter for the individual directions&#10;var countW = 0;&#10;var countE = 0;&#10;var countS = 0;&#10;	&#10;exports.setup = function () {&#10;	//the input-ports for the incoming cars&#10;    this.input('inputWest');&#10;    this.input('inputEast');&#10;    this.input('inputSouth');&#10;    //the output-ports for the leaving cars&#10;    this.output('outputWest');&#10;    this.output('outputEast');&#10;    this.output('outputSouth');&#10;    //the output-ports for analysis&#10;    this.output('display');&#10;    this.output('trafficJamDetectorW');&#10;    this.output('trafficJamDetectorE');&#10;    this.output('trafficJamDetectorS');&#10;    this.output('waitingTime');&#10;    &#10;    this.output('debug');&#10;}&#10;&#10;exports.initialize = function () {&#10;	//InputHandlers add cars to the queues of the corresponding direction &#10;&#10;	this.addInputHandler('inputWest', function() {&#10;		var car = this.get('inputWest');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueW.unshift(car);&#10;		carCount++;&#10;		countW++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputEast', function() {&#10;		var car = this.get('inputEast');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueE.unshift(car);&#10;		carCount++;&#10;		countE++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputSouth', function() {&#10;		var car = this.get('inputSouth');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueS.unshift(car);&#10;		carCount++;&#10;		countS++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;}&#10;&#10;// T-Intersection right-hand-rule&#10;//fires the car which has priority and lets the others wait	&#10;function right_hand_rule() {&#10;	// set to true if car was sent&#10;	var isSentW = false;&#10;	var isSentE = false;&#10;	var isSentS = false;&#10;		&#10;	//debug&#10;	this.send('debug',&quot;queueW &quot; + queueW.length);&#10;	this.send('debug',&quot;queueE &quot; + queueE.length);&#10;	this.send('debug',&quot;queueS &quot; + queueS.length);&#10;	this.send('debug', &quot;carCount &quot; + carCount);&#10;&#10;	// street west&#10;	if(queueW.length != 0) { // car from WEST&#10;		this.send('debug',&quot;queueW car &quot; + queueW[queueW.length - 1].carId); // debug&#10;		if(queueW[queueW.length - 1].indicator == 0) { // WEST --&gt; straight&#10;			if(queueS.length != 0) { // car from SOUTH&#10;				//stop&#10;			}else if(queueS.length == 0) {&#10;				this.send('outputEast',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}&#10;		}else if(queueW[queueW.length - 1].indicator == 1) { // WEST --&gt; right&#10;			this.send('outputSouth',queueW[queueW.length - 1]);&#10;			isSentW = true;&#10;		}&#10;	}&#10;			&#10;	// street east&#10;	if(queueE.length != 0) { // car from EAST&#10;		this.send('debug',&quot;queueE car &quot; + queueE[queueE.length - 1].carId); // debug&#10;		if(queueE[queueE.length - 1].indicator == 0) { // EAST --&gt; straight&#10;			this.send('outputWest',queueE[queueE.length - 1]);&#10;			isSentE = true;&#10;		}else if(queueE[queueE.length - 1].indicator == -1) { // EAST --&gt; left&#10;			if(queueW.length != 0 &amp;&amp; queueS.length != 0) { // special case:&#10;				if (queueS[queueS.length - 1].indicator == -1 &amp;&amp; queueW[queueW.length - 1].indicator == 0) { // West --&gt; straight, EAST --&gt; left, SOUTH --&gt; left&#10;					this.send('outputSouth',queueE[queueE.length - 1]); // convention: EAST goes first&#10;					isSentE = true;&#10;				}&#10;			}else if(queueW.length == 0) { // no car from west (south does not matter, because east always has priority)&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}&#10;		}&#10;	}&#10;			&#10;	// street south&#10;	if(queueS.length != 0) { // car from SOUTH&#10;		this.send('debug',&quot;queueS car &quot; + queueS[queueS.length - 1].carId); // debug&#10;		if(queueS[queueS.length - 1].indicator == 1) { // SOUTH --&gt; right&#10;			this.send('outputEast',queueS[queueS.length - 1]);&#10;			isSentS = true;&#10;		}else if(queueS[queueS.length - 1].indicator == -1) { // SOUTH --&gt; left&#10;			if(queueE.length != 0) { // car from east&#10;				//stop&#10;			}else if(queueE.length == 0) {&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}&#10;		}&#10;	}&#10;			&#10;	// if car was sent, pop it from queue, decrease counter accordingly&#10;	//and the avg waiting time is sent for analysis&#10;	if(isSentW) {&#10;		var carW = queueW.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carW.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countW--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;	}&#10;			&#10;	if(isSentE) {&#10;		var carE = queueE.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carE.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countE--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;	}&#10;			&#10;	if(isSentS) {&#10;		var carS = queueS.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carS.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countS--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;	}&#10;			&#10;	// repeat if there are still cars in the intersection&#10;	if(carCount != 0) {&#10;		setTimeout(right_hand_rule, 2000);&#10;	}&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{335.0, 395.0}">
            </property>
            <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputWest" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputEast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputWest" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputEast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="debug" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
            <port name="display" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorW" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="trafficJamDetectorE" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="trafficJamDetectorS" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="waitingTime" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="setIndicatorWest" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from WEST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carWest = this.get('car');&#10;	&#10;	if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 1;&#10;		this.send('output', carWest);&#10;	}&#10;	else if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('EAST')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 0;&#10;		this.send('output', carWest);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[165.0, 385.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[3.0, 0.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[9.0, -7.000000000000011]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[13.0, -1.0000000000000284]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-2.0, -15.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 4.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, -14.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorSouth" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from SOUTH&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carSouth = this.get('car');&#10;	&#10;	if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('EAST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = 1;&#10;		this.send('output', carSouth);&#10;	}&#10;	else if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('WEST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = -1;&#10;		this.send('output', carSouth);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[190.0, 590.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 1.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -6.000000000000016]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, -3.019806626980426E-14]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -14.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 5.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorEast" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from EAST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carEast = this.get('car');&#10;	&#10;	if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = -1;&#10;		this.send('output', carEast);&#10;	}&#10;	else if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('WEST')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = 0;&#10;		this.send('output', carEast);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[525.0, 375.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 2.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -5.000000000000012]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 0.9999999999999698]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 6.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -12.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
        </entity>
        <entity name="debug" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={526, 490, 359, 246}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[420.8919219970703, 517.3632659912109]">
            </property>
        </entity>
        <entity name="totalIntersectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="carCount">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={395, 329, 642, 334}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[626, 274]">
            </property>
            <property name="useLocalTime" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[250.0, 300.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="-180">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="222.0"/>
<yRange min="0.0" max="2.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="IndividualDirectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="traffic_East, traffic_West, traffic_South">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 12, 1347, 350}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[1331, 290]">
            </property>
            <property name="disconnectGraphOnAbsentValue" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="useLocalTime" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[575.0, 605.0]">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="222.0"/>
<yRange min="0.0" max="1.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="AvgWaitingTime" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 5, 516, 184}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[500, 124]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[520.0, 300.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('input');&#10;	this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('input', function() {&#10;		array.push(this.get('input'));&#10;		if (this.getParameter('analysisFlagAvgTime') == 1) {&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;	}&#10;	avg = sum/array.length;&#10;	this.send('output', avg);&#10;	setTimeout(avgTime, 30000);&#10;}&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[425.0, 300.0]">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="input" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation11" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation14" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation15" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="outputEast" relation="relation5"/>
        <link port="inputWest" relation="relation7"/>
        <link port="outputWest" relation="relation4"/>
        <link port="inputSouth" relation="relation3"/>
        <link port="outputSouth" relation="relation6"/>
        <link port="inputEast" relation="relation8"/>
        <link port="T-Intersection Right-Hand-Rule.inputWest" relation="relation10"/>
        <link port="T-Intersection Right-Hand-Rule.inputEast" relation="relation9"/>
        <link port="T-Intersection Right-Hand-Rule.inputSouth" relation="relation2"/>
        <link port="T-Intersection Right-Hand-Rule.outputWest" relation="relation4"/>
        <link port="T-Intersection Right-Hand-Rule.outputEast" relation="relation5"/>
        <link port="T-Intersection Right-Hand-Rule.outputSouth" relation="relation6"/>
        <link port="T-Intersection Right-Hand-Rule.display" relation="relation11"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorW" relation="relation13"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorE" relation="relation12"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorS" relation="relation14"/>
        <link port="T-Intersection Right-Hand-Rule.waitingTime" relation="relation"/>
        <link port="setIndicatorWest.car" relation="relation7"/>
        <link port="setIndicatorWest.output" relation="relation10"/>
        <link port="setIndicatorSouth.car" relation="relation3"/>
        <link port="setIndicatorSouth.output" relation="relation2"/>
        <link port="setIndicatorEast.car" relation="relation8"/>
        <link port="setIndicatorEast.output" relation="relation9"/>
        <link port="totalIntersectionCount.input" relation="relation11"/>
        <link port="IndividualDirectionCount.input" relation="relation12"/>
        <link port="IndividualDirectionCount.input" relation="relation13"/>
        <link port="IndividualDirectionCount.input" relation="relation14"/>
        <link port="AvgWaitingTime.input" relation="relation15"/>
        <link port="AvgTime.input" relation="relation"/>
        <link port="AvgTime.output" relation="relation15"/>
    </entity>
    <entity name="Cross-Intersection(3)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[220.0, 270.0]">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={438, 152, 928, 616}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 499]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{464.53297738693465, 415.1575062814071}">
        </property>
        <property name="intersectionId" class="ptolemy.data.expr.Parameter" value="3">
        </property>
        <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="5">
        </property>
        <property name="WEST" class="ptolemy.data.expr.Parameter" value="14">
        </property>
        <property name="EAST" class="ptolemy.data.expr.Parameter" value="4">
        </property>
        <property name="NORTH" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="italic" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="intersection-model that consists of &quot;setIndicator&quot; from each direction,&#10;that sets the indicator of the cars accordingly to their wanted direction.&#10;In the intersection the cars are sent to their prior setIndicator-direction.&#10;The two TimedPlotter are analysis tools for checking the workload.&#10;The AvgTime Actor computes the average waiting time in this intersection and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[480.0, 215.0]">
            </property>
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="IntersectionFlagAvgTime">
        </property>
        <port name="EastOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[495.0, 475.0]">
            </property>
        </port>
        <port name="WestIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, 395.0]">
            </property>
        </port>
        <port name="WestOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[105.0, 430.0]">
            </property>
        </port>
        <port name="SouthIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 600.0]">
            </property>
        </port>
        <port name="SouthOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[405.0, 585.0]">
            </property>
        </port>
        <port name="EastIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 490.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
        </port>
        <port name="NorthIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 195.0]">
            </property>
        </port>
        <port name="NorthOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[395.0, 290.0]">
            </property>
        </port>
        <entity name="Cross-Intersection Right-Hand-Rule" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// each intersection contains a street segment prior to the intersection, which is being analyzed by the counter&#10;//the street queues&#10;var queueW = [];&#10;var queueE = [];&#10;var queueS = [];&#10;var queueN = [];&#10;var carCount = 0; // indicates number of cars currently in the intersection&#10;&#10;// counter for the individual directions&#10;var countN = 0;&#10;var countE = 0;&#10;var countS = 0;&#10;var countW = 0;&#10;&#10;// for debug purpose&#10;var date;&#10;&#10;exports.setup = function () {&#10;	//the input-ports for the incoming cars&#10;    this.input('inputWest');&#10;    this.input('inputEast');&#10;    this.input('inputSouth');&#10;    this.input('inputNorth');&#10;    //the output-ports for the leaving cars&#10;    this.output('outputWest');&#10;    this.output('outputEast');&#10;    this.output('outputSouth');&#10;    this.output('outputNorth');&#10;    //the output-ports for analysis&#10;    this.output('display');&#10;    this.output('trafficJamDetectorN');&#10;    this.output('trafficJamDetectorE');&#10;    this.output('trafficJamDetectorS');&#10;    this.output('trafficJamDetectorW');&#10;    this.output('waitingTime');&#10;    &#10;    this.output('debug');&#10;}&#10;&#10;exports.initialize = function () {&#10;	//InputHandlers add cars to the queues of the corresponding direction&#10;	&#10;	this.addInputHandler('inputWest', function() {&#10;		var car = this.get('inputWest');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueW.unshift(car);&#10;		carCount++;&#10;		countW++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputEast', function() {&#10;		var car = this.get('inputEast');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueE.unshift(car);&#10;		carCount++;&#10;		countE++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputSouth', function() {&#10;		var car = this.get('inputSouth');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueS.unshift(car);&#10;		carCount++;&#10;		countS++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputNorth', function() {&#10;		var car = this.get('inputNorth');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueN.unshift(car);&#10;		carCount++;&#10;		countN++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorN', countN);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;}	&#10;	&#10;// Cross-Intersection right-hand-rule&#10;//fires the car which has priority and lets the others wait	&#10;function right_hand_rule() {&#10;	// set to true if car was sent&#10;	var isSentW = false;&#10;	var isSentE = false;&#10;	var isSentS = false;&#10;	var isSentN = false;&#10;		&#10;	//debug&#10;	this.send('debug',&quot;queueW &quot; + queueW.length);&#10;	this.send('debug',&quot;queueE &quot; + queueE.length);&#10;	this.send('debug',&quot;queueS &quot; + queueS.length);&#10;	this.send('debug',&quot;queueN &quot; + queueN.length);&#10;	this.send('debug', &quot;carCount &quot; + carCount);&#10;		&#10;	// street west&#10;	if(queueW.length != 0) { // car from WEST&#10;		this.send('debug',&quot;CarW &quot; + queueW[queueW.length - 1]); // debug&#10;		if(queueW[queueW.length - 1].indicator == 0) { //WEST --&gt; STRAIGHT&#10;			if(queueS.length != 0) { // car from SOUTH&#10;				//stop&#10;			}else {&#10;				this.send('outputEast',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}&#10;		}else if(queueW[queueW.length - 1].indicator == 1) { // WEST --&gt; RIGHT&#10;			this.send('outputSouth',queueW[queueW.length - 1]);&#10;			isSentW = true;&#10;		}else if(queueW[queueW.length - 1].indicator == -1) { // WEST --&gt; LEFT&#10;			if(queueE.length != 0 &amp;&amp; queueE[queueE.length - 1].indicator == -1) { // car from EAST&#10;				this.send('outputNorth',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}else if(queueS.length != 0) { // car from SOUTH&#10;				// stop&#10;			}else{&#10;				this.send('outputNorth',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}&#10;		}&#10;	}&#10;	&#10;	//street east	&#10;	if(queueE.length != 0) { // car from EAST&#10;		this.send('debug',&quot;CarE &quot; + queueE[queueE.length - 1]); //debug&#10;		if(queueE[queueE.length - 1].indicator == 0) { // EAST -&gt; STRAIGHT&#10;			if(queueN.length != 0) { // car from NORTH&#10;				// stop&#10;			}else{ // no car from NORTH&#10;				this.send('outputWest',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}&#10;		}else if(queueE[queueE.length - 1].indicator == -1) { // EAST -&gt; LEFT&#10;			if(queueW.length != 0 &amp;&amp; queueW[queueW.length - 1].indicator == -1) { // car from WEST&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}else if(queueN.length != 0) { // car from NORTH&#10;				// stop&#10;			}else{&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}&#10;		}else if(queueE[queueE.length - 1].indicator == 1) { // EAST -&gt; RIGHT&#10;			this.send('outputNorth',queueE[queueE.length - 1]);&#10;			isSentE = true;&#10;		}&#10;	}&#10;	&#10;	// street south	&#10;	if(queueS.length != 0) { // car from SOUTH&#10;		this.send('debug',&quot;CarS &quot; + queueS[queueS.length - 1]); //debug&#10;		if(queueS[queueS.length - 1].indicator == 1) { // SOUTH -&gt; RIGHT&#10;			this.send('outputEast',queueS[queueS.length - 1]);&#10;			isSentS = true;&#10;		}else if(queueS[queueS.length - 1].indicator == -1) { // SOUTH -&gt; LEFT&#10;			if(queueE.length != 0) { //car from EAST&#10;				//stop&#10;			}else if(queueN.length != 0 &amp;&amp; queueN[queueN.length - 1].indicator == -1) { //car from NORTH&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}else{&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}&#10;		}else if (queueS[queueS.length - 1].indicator == 0) { //SOUTH -&gt; STRAIGHT&#10;			if (queueE.length != 0) { // car from EAST&#10;				// stop&#10;			}else {&#10;				this.send('outputNorth',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}&#10;		}&#10;	}&#10;	&#10;	//street north		&#10;	if(queueN.length != 0) { // car from NORTH		&#10;		this.send('debug',&quot;CarN &quot; + queueN[queueN.length - 1]);&#10;		if(queueN[queueN.length - 1].indicator == 1) { // NORTH -&gt; RIGHT&#10;			this.send('outputWest',queueN[queueN.length - 1]);&#10;			isSentN = true;&#10;		}else if(queueN[queueN.length - 1].indicator == -1) { // NORTH -&gt; LEFT&#10;			if(queueW.length != 0) { //car from WEST&#10;				//stop&#10;			}else if(queueS.length != 0 &amp;&amp; queueS[queueS.length - 1].indicator == -1) { //car from SOUTH&#10;				this.send('outputEast',queueN[queueN.length - 1]);&#10;				isSentN = true;&#10;			}else{&#10;				this.send('outputEast',queueN[queueN.length - 1]);&#10;				isSentN = true;&#10;			}&#10;		}else if(queueN[queueN.length - 1].indicator == 0) { //NORTH -&gt; STRAIGHT&#10;			if(queueW.length != 0) { // car from WEST&#10;				// stop&#10;			}else{&#10;				this.send('outputSouth',queueN[queueN.length - 1]);&#10;				isSentN = true;&#10;			}&#10;		}&#10;	}&#10;		&#10;	//Special case if there is a car on each side of the intersection and no car could drive&#10;	//decides randomly which car can drive&#10;	if(!isSentW &amp;&amp; !isSentE &amp;&amp; !isSentS &amp;&amp; !isSentN) {&#10;		//0 = West, 1 = East, 2 = South, 3 = North&#10;		var random = Math.floor(Math.random() * 3);&#10;		&#10;		//sends information to debug-ports	&#10;		this.send('debug',&quot;queueW RAND &quot; + queueW.length);&#10;		this.send('debug',&quot;queueE RAND &quot; + queueE.length);&#10;		this.send('debug',&quot;queueS RAND &quot; + queueS.length);&#10;		this.send('debug',&quot;queueN RAND &quot; + queueN.length);&#10;		this.send('debug', &quot;carCount RAND &quot; + carCount);&#10;		this.send('debug', &quot;random numb: &quot; + random);&#10;			&#10;		if(random == 0) {&#10;			if(queueW[queueW.length - 1].indicator == 0) {&#10;				this.send('outputEast',queueW[queueW.length - 1]);&#10;			}&#10;			else if(queueW[queueW.length - 1].indicator == 1) {&#10;				this.send('outputSouth',queueW[queueW.length - 1]);&#10;			}&#10;			else if(queueW[queueW.length - 1].indicator == -1) {&#10;				this.send('outputNorth',queueW[queueW.length - 1]);&#10;			}&#10;			isSentW = true;&#10;		}&#10;			&#10;		else if(random == 1) {&#10;			if(queueE[queueE.length - 1].indicator == 0) {&#10;				this.send('outputWest',queueE[queueE.length - 1]);&#10;			}&#10;			else if(queueE[queueE.length - 1].indicator == 1) {&#10;				this.send('outputNorth',queueE[queueE.length - 1]);&#10;			}&#10;			else if(queueE[queueE.length - 1].indicator == -1) {&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;			}	&#10;			isSentE = true;&#10;		}&#10;			&#10;		else if(random == 2) {&#10;			if(queueS[queueS.length - 1].indicator == 0) {&#10;				this.send('outputNorth',queueS[queueS.length - 1]);&#10;			}&#10;			else if(queueS[queueS.length - 1].indicator == 1) {&#10;				this.send('outputEast',queueS[queueS.length - 1]);&#10;			}&#10;			else if(queueS[queueS.length - 1].indicator == -1) {&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;			}	&#10;			isSentS = true;&#10;		}&#10;		&#10;		else if(random == 3) {&#10;			if(queueN[queueN.length - 1].indicator == 0) {&#10;				this.send('outputSouth',queueN[queueN.length - 1]);&#10;			}&#10;			else if(queueN[queueN.length - 1].indicator == 1) {&#10;				this.send('outputWest',queueN[queueN.length - 1]);&#10;			}&#10;			else if(queueN[queueN.length - 1].indicator == -1) {&#10;				this.send('outputEast',queueN[queueN.length - 1]);&#10;			}&#10;			isSentN = true;&#10;		}&#10;	}&#10;	&#10;	// if car was sent, pop it from queue, decrease counter accordingly&#10;	if(isSentW) {&#10;		var carW = queueW.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carW.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countW--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;	}&#10;		&#10;	if(isSentE) {&#10;		var carE = queueE.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carE.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countE--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;	}&#10;		&#10;	if(isSentS) {&#10;		var carS = queueS.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carS.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countS--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;	}&#10;		&#10;	if(isSentN) {&#10;		var carN = queueN.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carN.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countN--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorN', countN);&#10;	}&#10;	&#10;	// repeat if there are still cars in the intersection	&#10;	if(carCount != 0) {&#10;		setTimeout(right_hand_rule, 2000);&#10;	}&#10;}&#10;&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{335.0, 395.0}">
            </property>
            <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="display" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorN" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorE" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorS" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="trafficJamDetectorW" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputWest" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputEast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="inputNorth" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputWest" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputEast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputNorth" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="debug" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="waitingTime" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorWest" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from WEST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carWest = this.get('car');&#10;	&#10;	if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 1;&#10;		this.send('output', carWest);&#10;	}&#10;	else if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('EAST')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 0;&#10;		this.send('output', carWest);&#10;	}&#10;	else if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('NORTH')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = -1;&#10;		this.send('output', carWest);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[65.0, 395.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[3.0, 0.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[9.0, -7.000000000000011]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[13.0, -1.0000000000000284]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-2.0, -15.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 4.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, -14.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="NORTH" class="ptolemy.data.expr.Parameter" value="NORTH">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorSouth" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from SOUTH&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carSouth = this.get('car');&#10;	&#10;	if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('EAST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = 1;&#10;		this.send('output', carSouth);&#10;	}&#10;	else if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('WEST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = -1;&#10;		this.send('output', carSouth);&#10;	}&#10;	else if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('NORTH')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = 0;&#10;		this.send('output', carSouth);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[210.0, 600.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 1.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -6.000000000000016]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, -3.019806626980426E-14]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -14.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 5.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <property name="NORTH" class="ptolemy.data.expr.Parameter" value="NORTH">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorEast" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from EAST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carEast = this.get('car');&#10;	&#10;	if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = -1;&#10;		this.send('output', carEast);&#10;	}&#10;	else if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('WEST')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = 0;&#10;		this.send('output', carEast);&#10;	}&#10;	else if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('NORTH')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = 1;&#10;		this.send('output', carEast);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[550.0, 445.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 2.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -5.000000000000012]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 0.9999999999999698]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 6.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -12.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="NORTH" class="ptolemy.data.expr.Parameter" value="NORTH">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
        </entity>
        <entity name="setIndicatorNorth" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from NORTH&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carNorth = this.get('car');&#10;	&#10;	if(carNorth.roadMap[carNorth.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carNorth.intersectionCount = carNorth.intersectionCount + 1;&#10;		carNorth.indicator = 0;&#10;		this.send('output', carNorth);&#10;	}&#10;	else if(carNorth.roadMap[carNorth.intersectionCount] == this.getParameter('EAST')) {&#10;		carNorth.intersectionCount = carNorth.intersectionCount + 1;&#10;		carNorth.indicator = -1;&#10;		this.send('output', carNorth);&#10;	}&#10;	else if(carNorth.roadMap[carNorth.intersectionCount] == this.getParameter('WEST')) {&#10;		carNorth.intersectionCount = carNorth.intersectionCount + 1;&#10;		carNorth.indicator = 1;&#10;		this.send('output', carNorth);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[335.0, 245.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[3.0, 0.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[9.0, -7.000000000000011]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[13.0, -1.0000000000000284]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-2.0, -15.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 4.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, -14.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="90">
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="Display" class="ptolemy.actor.lib.gui.Display">
            <display name="Debug"/>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={521, 738, 359, 246}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[200.0, 490.0]">
            </property>
        </entity>
        <entity name="totalIntersectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="carCount">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={34, 273, 642, 334}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[626, 274]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[170.0, 295.0]">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="200.0"/>
<yRange min="0.0" max="6.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="individualDirectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="traffic_North, traffic_East, traffic_South, traffic_West">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={28, 308, 642, 334}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[626, 274]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[995.0, 695.0]">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="200.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('input');&#10;	this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('input', function() {&#10;		array.push(this.get('input'));&#10;		if (this.getParameter('analysisFlagAvgTime') == 1) {&#10;			if(array.length == 1) { //function only needs to be called once&#10;			setTimeout(avgTime, 30000);&#10;		}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;	}&#10;	avg = sum/array.length;&#10;	this.send('output', avg);&#10;	setTimeout(avgTime, 30000);&#10;}&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[455.0, 540.0]">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="input" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="AvgWaitingTime" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 528, 502, 205}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[486, 145]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[540.0, 540.0]">
            </property>
        </entity>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation11" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation14" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation15" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation16" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation17" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation18" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation19" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="EastOut" relation="relation10"/>
        <link port="WestIn" relation="relation7"/>
        <link port="WestOut" relation="relation"/>
        <link port="SouthIn" relation="relation3"/>
        <link port="SouthOut" relation="relation6"/>
        <link port="EastIn" relation="relation8"/>
        <link port="NorthIn" relation="relation11"/>
        <link port="NorthOut" relation="relation4"/>
        <link port="Cross-Intersection Right-Hand-Rule.display" relation="relation13"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorN" relation="relation14"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorE" relation="relation15"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorS" relation="relation16"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorW" relation="relation17"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputWest" relation="relation2"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputEast" relation="relation12"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputSouth" relation="relation9"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputNorth" relation="relation5"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputWest" relation="relation"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputEast" relation="relation10"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputSouth" relation="relation6"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputNorth" relation="relation4"/>
        <link port="Cross-Intersection Right-Hand-Rule.waitingTime" relation="relation18"/>
        <link port="setIndicatorWest.car" relation="relation7"/>
        <link port="setIndicatorWest.output" relation="relation2"/>
        <link port="setIndicatorSouth.car" relation="relation3"/>
        <link port="setIndicatorSouth.output" relation="relation9"/>
        <link port="setIndicatorEast.car" relation="relation8"/>
        <link port="setIndicatorEast.output" relation="relation12"/>
        <link port="setIndicatorNorth.car" relation="relation11"/>
        <link port="setIndicatorNorth.output" relation="relation5"/>
        <link port="totalIntersectionCount.input" relation="relation13"/>
        <link port="individualDirectionCount.input" relation="relation14"/>
        <link port="individualDirectionCount.input" relation="relation15"/>
        <link port="individualDirectionCount.input" relation="relation16"/>
        <link port="individualDirectionCount.input" relation="relation17"/>
        <link port="AvgTime.input" relation="relation18"/>
        <link port="AvgTime.output" relation="relation19"/>
        <link port="AvgWaitingTime.input" relation="relation19"/>
    </entity>
    <entity name="Output 5" class="ptolemy.actor.lib.gui.MonitorValue">
        <doc>Monitor and display values</doc>
        <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.UpdatedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="displayWidth">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1260.0, 260.0]">
        </property>
    </entity>
    <entity name="carCounter (1)" class="ptolemy.actor.lib.Counter">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-430.0, -80.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,0.2,0.2,1.0}">
                </property>
            </property>
        </property>
        <port name="reset" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="Output 1" class="ptolemy.actor.lib.gui.MonitorValue">
        <doc>Monitor and display values</doc>
        <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.UpdatedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="displayWidth">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-855.0, 70.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
        </property>
    </entity>
    <entity name="Output 2" class="ptolemy.actor.lib.gui.MonitorValue">
        <doc>Monitor and display values</doc>
        <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.UpdatedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="displayWidth">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-855.0, 135.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </entity>
    <entity name="Output 3" class="ptolemy.actor.lib.gui.MonitorValue">
        <doc>Monitor and display values</doc>
        <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.UpdatedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="displayWidth">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-855.0, 200.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </entity>
    <entity name="Output 4" class="ptolemy.actor.lib.gui.MonitorValue">
        <doc>Monitor and display values</doc>
        <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="20">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.UpdatedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="displayWidth">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-855.0, 265.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
    </entity>
    <entity name="CarInput (1)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-430.0, -150.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-1.0, 0.0]">
                </property>
                <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,1.0,0.4,1.0}">
                </property>
            </property>
        </property>
        <property name="discreteClockPeriod" class="ptolemy.data.expr.Parameter" value="6.0">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[465.0, 155.0]">
            </property>
        </port>
        <entity name="CSVReader" class="ptolemy.actor.lib.io.CSVReader">
            <property name="fileOrURL" class="ptolemy.actor.parameters.FilePortParameter" value="cars1_25.txt">
            </property>
            <property name="separator" class="ptolemy.data.expr.StringParameter" value="tab">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[335.0, 165.0]">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
            </port>
        </entity>
        <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
            <property name="period" class="ptolemy.actor.parameters.PortParameter" value="6.0">
            </property>
            <doc>Create periodic timed events.</doc>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[212.75, 155.0]">
            </property>
            <port name="trigger" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="multiport"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="period" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="start" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="stop" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="output" relation="relation2"/>
        <link port="CSVReader.output" relation="relation2"/>
        <link port="CSVReader.trigger" relation="relation"/>
        <link port="DiscreteClock.output" relation="relation"/>
    </entity>
    <entity name="CarInput (5)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-498.33323669433594, 60.00000190734863]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-1.0, 0.0]">
                </property>
                <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,1.0,0.4,1.0}">
                </property>
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={219, 75, 928, 617}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 500]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{417.8205087939699, 225.36008165829145}">
        </property>
        <property name="discreteClockPeriod" class="ptolemy.data.expr.Parameter" value="6.0">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[495.0, 220.0]">
            </property>
        </port>
        <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
            <property name="period" class="ptolemy.actor.parameters.PortParameter" value="discreteClockPeriod">
            </property>
            <doc>Create periodic timed events.</doc>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[215.0, 220.0]">
            </property>
            <port name="trigger" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="multiport"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="period" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="start" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="stop" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
        </entity>
        <entity name="CSVReader" class="ptolemy.actor.lib.io.CSVReader">
            <property name="fileOrURL" class="ptolemy.actor.parameters.FilePortParameter" value="cars5_25.txt">
            </property>
            <property name="separator" class="ptolemy.data.expr.StringParameter" value="tab">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[358.0703125, 229.94569396972656]">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int}">
                </property>
            </port>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="output" relation="relation2"/>
        <link port="DiscreteClock.output" relation="relation"/>
        <link port="CSVReader.output" relation="relation2"/>
        <link port="CSVReader.trigger" relation="relation"/>
    </entity>
    <entity name="CarInput (4)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-370.0, 260.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-1.0, 0.0]">
                </property>
                <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,1.0,0.4,1.0}">
                </property>
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={219, 75, 928, 617}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 500]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{417.8205087939699, 225.36008165829145}">
        </property>
        <property name="discreteClockPeriod" class="ptolemy.data.expr.Parameter" value="6.0">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[495.0, 220.0]">
            </property>
        </port>
        <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
            <property name="period" class="ptolemy.actor.parameters.PortParameter" value="discreteClockPeriod">
            </property>
            <doc>Create periodic timed events.</doc>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[215.0, 220.0]">
            </property>
            <port name="trigger" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="multiport"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="period" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="start" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="stop" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
        </entity>
        <entity name="CSVReader" class="ptolemy.actor.lib.io.CSVReader">
            <property name="fileOrURL" class="ptolemy.actor.parameters.FilePortParameter" value="cars4_25.txt">
            </property>
            <property name="separator" class="ptolemy.data.expr.StringParameter" value="tab">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[355.0, 230.0]">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int}">
                </property>
            </port>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="output" relation="relation2"/>
        <link port="DiscreteClock.output" relation="relation"/>
        <link port="CSVReader.output" relation="relation2"/>
        <link port="CSVReader.trigger" relation="relation"/>
    </entity>
    <entity name="CarInput (3)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-485.0, 485.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-1.0, 0.0]">
                </property>
                <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,1.0,0.4,1.0}">
                </property>
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={219, 75, 928, 617}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 500]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{417.8205087939699, 225.36008165829145}">
        </property>
        <property name="discreteClockPeriod" class="ptolemy.data.expr.Parameter" value="6.0">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[495.0, 220.0]">
            </property>
        </port>
        <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
            <property name="period" class="ptolemy.actor.parameters.PortParameter" value="discreteClockPeriod">
            </property>
            <doc>Create periodic timed events.</doc>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[215.0, 220.0]">
            </property>
            <port name="trigger" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="multiport"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="period" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="start" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="stop" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
        </entity>
        <entity name="CSVReader" class="ptolemy.actor.lib.io.CSVReader">
            <property name="fileOrURL" class="ptolemy.actor.parameters.FilePortParameter" value="cars3_25.txt">
            </property>
            <property name="separator" class="ptolemy.data.expr.StringParameter" value="tab">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{355.41026099123553, 230.180043206143}">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int}">
                </property>
            </port>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="output" relation="relation2"/>
        <link port="DiscreteClock.output" relation="relation"/>
        <link port="CSVReader.output" relation="relation2"/>
        <link port="CSVReader.trigger" relation="relation"/>
    </entity>
    <entity name="CarInput (2)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1030.0, 320.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-1.0, 0.0]">
                </property>
                <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,1.0,0.4,1.0}">
                </property>
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={219, 75, 928, 617}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 500]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{417.8205087939699, 225.36008165829145}">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="discreteClockPeriod" class="ptolemy.data.expr.Parameter" value="6.0">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[480.0, 210.0]">
            </property>
        </port>
        <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
            <property name="period" class="ptolemy.actor.parameters.PortParameter" value="discreteClockPeriod">
            </property>
            <doc>Create periodic timed events.</doc>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 210.0]">
            </property>
            <port name="trigger" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="multiport"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="period" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="start" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="stop" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
        </entity>
        <entity name="CSVReader" class="ptolemy.actor.lib.io.CSVReader">
            <property name="fileOrURL" class="ptolemy.actor.parameters.FilePortParameter" value="cars2_25.txt">
            </property>
            <property name="separator" class="ptolemy.data.expr.StringParameter" value="tab">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[355.0, 220.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int}">
                </property>
            </port>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="output" relation="relation2"/>
        <link port="DiscreteClock.output" relation="relation"/>
        <link port="CSVReader.output" relation="relation2"/>
        <link port="CSVReader.trigger" relation="relation"/>
    </entity>
    <entity name="carCounter (5)" class="ptolemy.actor.lib.Counter">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-500.0, 135.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,0.2,0.2,1.0}">
                </property>
            </property>
        </property>
        <port name="reset" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="carCounter (4)" class="ptolemy.actor.lib.Counter">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-370.0, 355.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,0.2,0.2,1.0}">
                </property>
            </property>
        </property>
        <port name="reset" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="carCounter (3)" class="ptolemy.actor.lib.Counter">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-480.0, 575.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,0.2,0.2,1.0}">
                </property>
            </property>
        </property>
        <port name="reset" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="carCounter (2)" class="ptolemy.actor.lib.Counter">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[1030.0, 225.0]">
        </property>
        <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,0.2,0.2,1.0}">
                </property>
            </property>
        </property>
        <port name="reset" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="streetExtension" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-203.408203125, -140.107421875]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="1.0" max="239.0"/>
<yRange min="0.0" max="6.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension2" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-270.0, 70.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="1.0" max="183.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension3" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 70.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="20.0" max="218.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[226.43643951416016, 711.8579406738281]">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
            <link port="PoissonClock.output" relation="relation19"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension4" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{512.7826633165812, 8.662688442212414}">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="26.0" max="218.0"/>
<yRange min="0.0" max="4.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[230.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension5" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{59.1520100502525, 157.46545226130564}">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="20.0" max="199.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension6" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-116.82475081400446, 270.1519299224378]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="1.0" max="208.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension7" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[423.3768635658754, 270.1242047027112]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="20.0" max="199.0"/>
<yRange min="0.0" max="4.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension8" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[840.0, 270.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="1.0" max="209.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension9" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{370.9497487437185, 566.864949748742}">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="26.0" max="170.0"/>
<yRange min="0.0" max="2.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension10" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[120.0, 495.0]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="20.0" max="217.0"/>
<yRange min="0.0" max="5.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="streetExtension11" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-243.35078073625868, 495.00240092061745]">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{0, 0}">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="60">
                </property>
                <property name="height" class="ptolemy.data.expr.Parameter" value="40">
                </property>
                <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="20">
                </property>
                <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-33.0, -5.0]">
                </property>
            </property>
        </property>
        <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
        </property>
        <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="StreetPlotterFlag">
        </property>
        <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="street-model that operates as an extension to the already implemented street(-queue) &#10;in the intersections to simply add more controll to jam situations. &#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.&#10;The AvgTime Actor computes the average waiting time in this street and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[565.0, -200.0]">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 0, 1386, 788}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1158, 671]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.5625">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{690.6264133165832, -17.871023869346686}">
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="StreetFlagAvgTime">
        </property>
        <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[590.0, 0.0]">
            </property>
        </port>
        <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{1130.0, 55.0}">
            </property>
        </port>
        <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1130.0, 140.0]">
            </property>
        </port>
        <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 135.0]">
            </property>
        </port>
        <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 0.0]">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[1035.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="Street" class="ptolemy.actor.TypedCompositeActor">
            <property name="_location" class="ptolemy.kernel.util.Location" value="{855.0, 65.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="-0.5, 0.5">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="41.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="21.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                    </property>
                    <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, -10.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 11.0]">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="40.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
                    </property>
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="- - - - -">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-24.0, -4.0]">
                    </property>
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-8, -8, 1382, 744}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1154, 627]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{794.107204861111, 771.7534722222222}">
            </property>
            <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
            </property>
            <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Inner-street-model that adds cars to a waiting-queue, if the street itself is full.&#10;The counter constantly checks the size of the queue and fires a trigger, if the limit is reached. &#10;Otherwise we send the car to the output.&#10;Delays are needed to avoid &quot;zero-delay-loops&quot; between the JavaScripts.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 370.0]">
                </property>
            </property>
            <port name="leftRightInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 602.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="leftRightOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{921.3117148241206, 582.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftInput" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{266.3117148241206, 767.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <port name="rightLeftOutput" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{916.3117148241206, 747.0116206030151}">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int), indicator = int, intersectionCount = int}">
                </property>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
            </port>
            <entity name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{626.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="TimeDelay2" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="duration">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{641.3117148241206, 767.0116206030151}">
                </property>
            </entity>
            <entity name="countCheck (1)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{811.3117148241206, 602.0116206030151}">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="StreetInputOutput" class="ptolemy.actor.lib.gui.TimedPlotter">
                <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="counter: left-right, counter: right-left">
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={393, 68, 687, 497}, maximized=false}">
                </property>
                <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[671, 437]">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[905.0, 675.0]">
                </property>
                <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="1.0" max="236.0"/>
<yRange min="0.0" max="5.0"/>
</plot>?>
                </configure>
            </entity>
            <entity name="Counter" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[685.0, 490.0]">
                </property>
            </entity>
            <entity name="Counter2" class="ptolemy.actor.lib.Counter">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[680.0, 930.0]">
                </property>
            </entity>
            <entity name="countCheck (2)" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// how many cars are in the street&#10;	var counter = 0;&#10;//queue to save the waiting cars&#10;	var queue = [];&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('counter');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;    this.output('display');&#10;    this.output('trigger');&#10;}&#10;&#10;exports.initialize = function () {&#10;	&#10;	// incoming cars are sent to intersection&#10;	this.addInputHandler('input', function() {&#10;		this.send('output', this.get('input'));&#10;	});&#10;	&#10;	// set counter&#10;	this.addInputHandler('counter', function() {&#10;		counter = this.get('counter');&#10;		&#10;		// analysis&#10;		if (this.getParameter('analysisFlag') == 1) {&#10;			this.send('display', counter);&#10;		}&#10;		&#10;		// check if counter is bigger than street length&#10;		if (counter &lt; this.getParameter('streetLength')-1) {&#10;			this.send('trigger', counter);&#10;		} else {&#10;			// do nothing, street is full&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[800.0, 750.0]">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="false">
                </property>
                <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="analysisFlag" class="ptolemy.data.expr.Parameter" value="analysisFlag">
                </property>
                <property name="streetLength" class="ptolemy.data.expr.Parameter" value="streetLength">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="display" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="counter" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                    </property>
                </port>
            </entity>
            <entity name="Queue" class="ptolemy.domains.de.lib.Queue">
                <property name="capacity" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="persistentTrigger" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{446.3117148241206, 602.0116206030151}">
                </property>
            </entity>
            <entity name="Queue2" class="ptolemy.domains.de.lib.Queue">
                <property name="_location" class="ptolemy.kernel.util.Location" value="{444.2032073344152, 767.4927900560338}">
                </property>
            </entity>
            <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 840.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 660.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 710.0]">
                </property>
            </entity>
            <entity name="PoissonClock2" class="ptolemy.actor.lib.PoissonClock">
                <property name="meanTime" class="ptolemy.data.expr.Parameter" value="2">
                </property>
                <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[225.0, 900.0]">
                </property>
            </entity>
            <entity name="triggerRightLeft" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[325.0, 900.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="triggerLeftRight" class="ptolemy.actor.lib.jjs.JavaScript">
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
                </property>
                <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
                </property>
                <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// size of the waiting-cars-queue prior to the street&#10;var queueSize = 0;&#10;&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('input');&#10;    this.input('clock');&#10;    &#10;    //the Output-ports for the leaving cars&#10;    this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	// set the size&#10;	this.addInputHandler('input', function() {&#10;		queueSize = this.get('input');&#10;	});&#10;	&#10;	// if the queue is empty, cars can be sent&#10;	this.addInputHandler('clock', function() {&#10;		if(queueSize == 0) {&#10;			this.send('output', true);&#10;		}&#10;	});&#10;}">
                    <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                        <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                        </property>
                    </property>
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                    </property>
                    <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[331.3117148241206, 712.0116206030151]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <port name="error" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                    <property name="input"/>
                    <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                    </property>
                </port>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                    <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                    </property>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                </port>
                <port name="clock" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="TimeDelay5" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[370.0, 650.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <entity name="TimeDelay6" class="ptolemy.actor.lib.TimeDelay">
                <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[365.0, 810.0]">
                </property>
                <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{541.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{716.3117148241206, 602.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{551.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation5" class="ptolemy.actor.TypedIORelation">
                <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
                </property>
                <vertex name="vertex1" value="{721.3117148241206, 767.0116206030151}">
                </vertex>
            </relation>
            <relation name="relation6" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation7" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation8" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation10" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation11" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation12" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation14" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation15" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation16" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation17" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation18" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation19" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation20" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation21" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation22" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation23" class="ptolemy.actor.TypedIORelation">
            </relation>
            <relation name="relation24" class="ptolemy.actor.TypedIORelation">
            </relation>
            <link port="leftRightInput" relation="relation11"/>
            <link port="leftRightOutput" relation="relation"/>
            <link port="rightLeftInput" relation="relation12"/>
            <link port="rightLeftOutput" relation="relation10"/>
            <link port="TimeDelay.input" relation="relation2"/>
            <link port="TimeDelay.output" relation="relation3"/>
            <link port="TimeDelay2.input" relation="relation4"/>
            <link port="TimeDelay2.output" relation="relation5"/>
            <link port="countCheck (1).input" relation="relation3"/>
            <link port="countCheck (1).output" relation="relation"/>
            <link port="countCheck (1).display" relation="relation7"/>
            <link port="countCheck (1).trigger" relation="relation15"/>
            <link port="countCheck (1).counter" relation="relation6"/>
            <link port="StreetInputOutput.input" relation="relation7"/>
            <link port="StreetInputOutput.input" relation="relation9"/>
            <link port="Counter.increment" relation="relation2"/>
            <link port="Counter.decrement" relation="relation3"/>
            <link port="Counter.output" relation="relation6"/>
            <link port="Counter2.increment" relation="relation4"/>
            <link port="Counter2.decrement" relation="relation5"/>
            <link port="Counter2.output" relation="relation8"/>
            <link port="countCheck (2).input" relation="relation5"/>
            <link port="countCheck (2).output" relation="relation10"/>
            <link port="countCheck (2).display" relation="relation9"/>
            <link port="countCheck (2).trigger" relation="relation13"/>
            <link port="countCheck (2).counter" relation="relation8"/>
            <link port="Queue.input" relation="relation11"/>
            <link port="Queue.output" relation="relation2"/>
            <link port="Queue.trigger" relation="relation14"/>
            <link port="Queue.trigger" relation="relation20"/>
            <link port="Queue.size" relation="relation21"/>
            <link port="Queue2.input" relation="relation12"/>
            <link port="Queue2.output" relation="relation4"/>
            <link port="Queue2.trigger" relation="relation16"/>
            <link port="Queue2.trigger" relation="relation18"/>
            <link port="Queue2.size" relation="relation23"/>
            <link port="TimeDelay3.input" relation="relation13"/>
            <link port="TimeDelay3.output" relation="relation16"/>
            <link port="TimeDelay4.input" relation="relation15"/>
            <link port="TimeDelay4.output" relation="relation14"/>
            <link port="PoissonClock.output" relation="relation19"/>
            <link port="PoissonClock2.output" relation="relation17"/>
            <link port="triggerRightLeft.input" relation="relation24"/>
            <link port="triggerRightLeft.output" relation="relation18"/>
            <link port="triggerRightLeft.clock" relation="relation17"/>
            <link port="triggerLeftRight.input" relation="relation22"/>
            <link port="triggerLeftRight.output" relation="relation20"/>
            <link port="triggerLeftRight.clock" relation="relation19"/>
            <link port="TimeDelay5.input" relation="relation21"/>
            <link port="TimeDelay5.output" relation="relation22"/>
            <link port="TimeDelay6.input" relation="relation23"/>
            <link port="TimeDelay6.output" relation="relation24"/>
        </entity>
        <entity name="AvgWaitingTimeLeftToRight" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={578, 705, 573, 192}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[835.0, -65.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[775.0, 0.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay3" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[940.0, 0.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <entity name="AvgWaitingTimeRightToLeft" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={1159, 715, 573, 154}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[392, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[960.0, 220.0]">
            </property>
        </entity>
        <entity name="AvgTime2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('inputFirst');&#10;	this.input('inputLast');&#10;	this.output('outputFirst');&#10;	this.output('outputLast');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('inputFirst', function() {&#10;		var car = this.get('inputFirst');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		this.send('outputFirst', car);&#10;	});&#10;	&#10;	this.addInputHandler('inputLast', function() {&#10;		if(this.getParameter('analysisFlagAvgTime') == 1) {&#10;			var car = this.get('inputLast');&#10;			var waitingTime = Math.round(new Date().getTime() / 1000) - car.time;&#10;			&#10;			array.push(waitingTime);&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;		sum -= this.getParameter('duration');&#10;	}&#10;	&#10;	avg = sum/array.length;&#10;	this.send('outputLast', avg);&#10;	setTimeout(avgTime, 30000);&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[925.0, 155.0]">
            </property>
            <property name="duration" class="ptolemy.data.expr.Parameter" value="duration">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputLast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputFirst" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputLast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="TimeDelay4" class="ptolemy.actor.lib.TimeDelay">
            <property name="delay" class="ptolemy.actor.parameters.PortParameter" value="1">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[785.0, 155.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <port name="delay" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[995.0, 55.0]">
            </vertex>
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
            </property>
            <vertex name="vertex1" value="[695.0, 75.0]">
            </vertex>
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="leftRightInput" relation="relation3"/>
        <link port="leftRightOutput" relation="relation9"/>
        <link port="rightLeftInput" relation="relation4"/>
        <link port="rightLeftOutput" relation="relation13"/>
        <link port="TimeDelay.input" relation="relation3"/>
        <link port="TimeDelay.output" relation="relation"/>
        <link port="TimeDelay2.input" relation="relation4"/>
        <link port="TimeDelay2.output" relation="relation2"/>
        <link port="Street.leftRightInput" relation="relation7"/>
        <link port="Street.leftRightOutput" relation="relation9"/>
        <link port="Street.rightLeftInput" relation="relation12"/>
        <link port="Street.rightLeftOutput" relation="relation13"/>
        <link port="AvgWaitingTimeLeftToRight.input" relation="relation8"/>
        <link port="AvgTime.inputFirst" relation="relation"/>
        <link port="AvgTime.inputLast" relation="relation6"/>
        <link port="AvgTime.outputFirst" relation="relation7"/>
        <link port="AvgTime.outputLast" relation="relation8"/>
        <link port="TimeDelay3.input" relation="relation9"/>
        <link port="TimeDelay3.output" relation="relation6"/>
        <link port="AvgWaitingTimeRightToLeft.input" relation="relation10"/>
        <link port="AvgTime2.inputFirst" relation="relation2"/>
        <link port="AvgTime2.inputLast" relation="relation5"/>
        <link port="AvgTime2.outputFirst" relation="relation12"/>
        <link port="AvgTime2.outputLast" relation="relation10"/>
        <link port="TimeDelay4.input" relation="relation13"/>
        <link port="TimeDelay4.output" relation="relation5"/>
    </entity>
    <entity name="T-Intersection (2)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-91.22361809045162, 69.82851758793902}">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={217, 54, 928, 616}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 499]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8000000000000003">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{436.5500157035176, 392.4077418341708}">
        </property>
        <property name="intersectionId" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="3">
        </property>
        <property name="WEST" class="ptolemy.data.expr.Parameter" value="11">
        </property>
        <property name="EAST" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="italic" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="intersection-model that consists of &quot;setIndicator&quot; from each direction,&#10;that sets the indicator of the cars accordingly to their wanted direction.&#10;In the intersection the cars are sent to their prior setIndicator-direction.&#10;The two TimedPlotter are analysis tools for checking the workload.&#10;The AvgTime Actor computes the average waiting time in this intersection and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[125.0, 130.0]">
            </property>
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="IntersectionFlagAvgTime">
        </property>
        <port name="outputEast" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[625.0, 455.0]">
            </property>
        </port>
        <port name="inputWest" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[70.0, 385.0]">
            </property>
        </port>
        <port name="outputWest" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[85.0, 465.0]">
            </property>
        </port>
        <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[45.0, 590.0]">
            </property>
        </port>
        <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[430.0, 650.0]">
            </property>
        </port>
        <port name="inputEast" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[625.0, 415.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
        </port>
        <entity name="T-Intersection Right-Hand-Rule" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// each intersection contains a street segment prior to the intersection, which is being analyzed by the counter&#10;//the street queues&#10;var queueW = [];&#10;var queueE = []; &#10;var queueS = [];&#10;var carCount = 0; // indicates number of cars currently in the intersection&#10;	&#10;// counter for the individual directions&#10;var countW = 0;&#10;var countE = 0;&#10;var countS = 0;&#10;	&#10;exports.setup = function () {&#10;	//the input-ports for the incoming cars&#10;    this.input('inputWest');&#10;    this.input('inputEast');&#10;    this.input('inputSouth');&#10;    //the output-ports for the leaving cars&#10;    this.output('outputWest');&#10;    this.output('outputEast');&#10;    this.output('outputSouth');&#10;    //the output-ports for analysis&#10;    this.output('display');&#10;    this.output('trafficJamDetectorW');&#10;    this.output('trafficJamDetectorE');&#10;    this.output('trafficJamDetectorS');&#10;    this.output('waitingTime');&#10;    &#10;    this.output('debug');&#10;}&#10;&#10;exports.initialize = function () {&#10;	//InputHandlers add cars to the queues of the corresponding direction &#10;&#10;	this.addInputHandler('inputWest', function() {&#10;		var car = this.get('inputWest');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueW.unshift(car);&#10;		carCount++;&#10;		countW++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputEast', function() {&#10;		var car = this.get('inputEast');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueE.unshift(car);&#10;		carCount++;&#10;		countE++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputSouth', function() {&#10;		var car = this.get('inputSouth');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueS.unshift(car);&#10;		carCount++;&#10;		countS++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;}&#10;&#10;// T-Intersection right-hand-rule&#10;//fires the car which has priority and lets the others wait	&#10;function right_hand_rule() {&#10;	// set to true if car was sent&#10;	var isSentW = false;&#10;	var isSentE = false;&#10;	var isSentS = false;&#10;		&#10;	//debug&#10;	this.send('debug',&quot;queueW &quot; + queueW.length);&#10;	this.send('debug',&quot;queueE &quot; + queueE.length);&#10;	this.send('debug',&quot;queueS &quot; + queueS.length);&#10;	this.send('debug', &quot;carCount &quot; + carCount);&#10;&#10;	// street west&#10;	if(queueW.length != 0) { // car from WEST&#10;		this.send('debug',&quot;queueW car &quot; + queueW[queueW.length - 1].carId); // debug&#10;		if(queueW[queueW.length - 1].indicator == 0) { // WEST --&gt; straight&#10;			if(queueS.length != 0) { // car from SOUTH&#10;				//stop&#10;			}else if(queueS.length == 0) {&#10;				this.send('outputEast',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}&#10;		}else if(queueW[queueW.length - 1].indicator == 1) { // WEST --&gt; right&#10;			this.send('outputSouth',queueW[queueW.length - 1]);&#10;			isSentW = true;&#10;		}&#10;	}&#10;			&#10;	// street east&#10;	if(queueE.length != 0) { // car from EAST&#10;		this.send('debug',&quot;queueE car &quot; + queueE[queueE.length - 1].carId); // debug&#10;		if(queueE[queueE.length - 1].indicator == 0) { // EAST --&gt; straight&#10;			this.send('outputWest',queueE[queueE.length - 1]);&#10;			isSentE = true;&#10;		}else if(queueE[queueE.length - 1].indicator == -1) { // EAST --&gt; left&#10;			if(queueW.length != 0 &amp;&amp; queueS.length != 0) { // special case:&#10;				if (queueS[queueS.length - 1].indicator == -1 &amp;&amp; queueW[queueW.length - 1].indicator == 0) { // West --&gt; straight, EAST --&gt; left, SOUTH --&gt; left&#10;					this.send('outputSouth',queueE[queueE.length - 1]); // convention: EAST goes first&#10;					isSentE = true;&#10;				}&#10;			}else if(queueW.length == 0) { // no car from west (south does not matter, because east always has priority)&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}&#10;		}&#10;	}&#10;			&#10;	// street south&#10;	if(queueS.length != 0) { // car from SOUTH&#10;		this.send('debug',&quot;queueS car &quot; + queueS[queueS.length - 1].carId); // debug&#10;		if(queueS[queueS.length - 1].indicator == 1) { // SOUTH --&gt; right&#10;			this.send('outputEast',queueS[queueS.length - 1]);&#10;			isSentS = true;&#10;		}else if(queueS[queueS.length - 1].indicator == -1) { // SOUTH --&gt; left&#10;			if(queueE.length != 0) { // car from east&#10;				//stop&#10;			}else if(queueE.length == 0) {&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}&#10;		}&#10;	}&#10;			&#10;	// if car was sent, pop it from queue, decrease counter accordingly&#10;	//and the avg waiting time is sent for analysis&#10;	if(isSentW) {&#10;		var carW = queueW.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carW.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countW--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;	}&#10;			&#10;	if(isSentE) {&#10;		var carE = queueE.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carE.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countE--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;	}&#10;			&#10;	if(isSentS) {&#10;		var carS = queueS.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carS.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countS--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;	}&#10;			&#10;	// repeat if there are still cars in the intersection&#10;	if(carCount != 0) {&#10;		setTimeout(right_hand_rule, 2000);&#10;	}&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{335.0, 395.0}">
            </property>
            <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputWest" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputEast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputWest" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputEast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="debug" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
            <port name="display" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorW" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="trafficJamDetectorE" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="trafficJamDetectorS" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="waitingTime" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="setIndicatorWest" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from WEST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carWest = this.get('car');&#10;	&#10;	if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 1;&#10;		this.send('output', carWest);&#10;	}&#10;	else if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('EAST')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 0;&#10;		this.send('output', carWest);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[165.0, 385.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[3.0, 0.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[9.0, -7.000000000000011]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[13.0, -1.0000000000000284]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-2.0, -15.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 4.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, -14.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorSouth" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from SOUTH&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carSouth = this.get('car');&#10;	&#10;	if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('EAST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = 1;&#10;		this.send('output', carSouth);&#10;	}&#10;	else if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('WEST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = -1;&#10;		this.send('output', carSouth);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[190.0, 590.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 1.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -6.000000000000016]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, -3.019806626980426E-14]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -14.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 5.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorEast" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from EAST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carEast = this.get('car');&#10;	&#10;	if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = -1;&#10;		this.send('output', carEast);&#10;	}&#10;	else if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('WEST')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = 0;&#10;		this.send('output', carEast);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[525.0, 375.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 2.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -5.000000000000012]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 0.9999999999999698]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 6.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -12.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
        </entity>
        <entity name="debug" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={526, 490, 359, 246}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[420.8919219970703, 517.3632659912109]">
            </property>
        </entity>
        <entity name="totalIntersectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="carCount">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={395, 329, 642, 334}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[626, 274]">
            </property>
            <property name="useLocalTime" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[250.0, 300.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="-180">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="201.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="IndividualDirectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="traffic_East, traffic_West, traffic_South">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 12, 1347, 350}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[1331, 290]">
            </property>
            <property name="disconnectGraphOnAbsentValue" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="useLocalTime" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[575.0, 605.0]">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="201.0"/>
<yRange min="0.0" max="1.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="AvgWaitingTime" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 5, 516, 184}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[500, 124]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[520.0, 300.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('input');&#10;	this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('input', function() {&#10;		array.push(this.get('input'));&#10;		if (this.getParameter('analysisFlagAvgTime') == 1) {&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;	}&#10;	avg = sum/array.length;&#10;	this.send('output', avg);&#10;	setTimeout(avgTime, 30000);&#10;}&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[425.0, 300.0]">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="input" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation11" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation14" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation15" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="outputEast" relation="relation5"/>
        <link port="inputWest" relation="relation7"/>
        <link port="outputWest" relation="relation4"/>
        <link port="inputSouth" relation="relation3"/>
        <link port="outputSouth" relation="relation6"/>
        <link port="inputEast" relation="relation8"/>
        <link port="T-Intersection Right-Hand-Rule.inputWest" relation="relation10"/>
        <link port="T-Intersection Right-Hand-Rule.inputEast" relation="relation9"/>
        <link port="T-Intersection Right-Hand-Rule.inputSouth" relation="relation2"/>
        <link port="T-Intersection Right-Hand-Rule.outputWest" relation="relation4"/>
        <link port="T-Intersection Right-Hand-Rule.outputEast" relation="relation5"/>
        <link port="T-Intersection Right-Hand-Rule.outputSouth" relation="relation6"/>
        <link port="T-Intersection Right-Hand-Rule.display" relation="relation11"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorW" relation="relation13"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorE" relation="relation12"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorS" relation="relation14"/>
        <link port="T-Intersection Right-Hand-Rule.waitingTime" relation="relation"/>
        <link port="setIndicatorWest.car" relation="relation7"/>
        <link port="setIndicatorWest.output" relation="relation10"/>
        <link port="setIndicatorSouth.car" relation="relation3"/>
        <link port="setIndicatorSouth.output" relation="relation2"/>
        <link port="setIndicatorEast.car" relation="relation8"/>
        <link port="setIndicatorEast.output" relation="relation9"/>
        <link port="totalIntersectionCount.input" relation="relation11"/>
        <link port="IndividualDirectionCount.input" relation="relation12"/>
        <link port="IndividualDirectionCount.input" relation="relation13"/>
        <link port="IndividualDirectionCount.input" relation="relation14"/>
        <link port="AvgWaitingTime.input" relation="relation15"/>
        <link port="AvgTime.input" relation="relation"/>
        <link port="AvgTime.output" relation="relation15"/>
    </entity>
    <entity name="T-Intersection (5)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-86.98361271230408, 495.15855185350506]">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={217, 54, 928, 616}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 499]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8000000000000003">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{436.5500157035176, 392.4077418341708}">
        </property>
        <property name="intersectionId" class="ptolemy.data.expr.Parameter" value="5">
        </property>
        <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="4">
        </property>
        <property name="WEST" class="ptolemy.data.expr.Parameter" value="13">
        </property>
        <property name="EAST" class="ptolemy.data.expr.Parameter" value="3">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="italic" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="intersection-model that consists of &quot;setIndicator&quot; from each direction,&#10;that sets the indicator of the cars accordingly to their wanted direction.&#10;In the intersection the cars are sent to their prior setIndicator-direction.&#10;The two TimedPlotter are analysis tools for checking the workload.&#10;The AvgTime Actor computes the average waiting time in this intersection and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[125.0, 130.0]">
            </property>
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="IntersectionFlagAvgTime">
        </property>
        <port name="outputEast" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[625.0, 455.0]">
            </property>
        </port>
        <port name="inputWest" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[70.0, 385.0]">
            </property>
        </port>
        <port name="outputWest" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[85.0, 465.0]">
            </property>
        </port>
        <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[45.0, 590.0]">
            </property>
        </port>
        <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[430.0, 650.0]">
            </property>
        </port>
        <port name="inputEast" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[625.0, 415.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
        </port>
        <entity name="T-Intersection Right-Hand-Rule" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// each intersection contains a street segment prior to the intersection, which is being analyzed by the counter&#10;//the street queues&#10;var queueW = [];&#10;var queueE = []; &#10;var queueS = [];&#10;var carCount = 0; // indicates number of cars currently in the intersection&#10;	&#10;// counter for the individual directions&#10;var countW = 0;&#10;var countE = 0;&#10;var countS = 0;&#10;	&#10;exports.setup = function () {&#10;	//the input-ports for the incoming cars&#10;    this.input('inputWest');&#10;    this.input('inputEast');&#10;    this.input('inputSouth');&#10;    //the output-ports for the leaving cars&#10;    this.output('outputWest');&#10;    this.output('outputEast');&#10;    this.output('outputSouth');&#10;    //the output-ports for analysis&#10;    this.output('display');&#10;    this.output('trafficJamDetectorW');&#10;    this.output('trafficJamDetectorE');&#10;    this.output('trafficJamDetectorS');&#10;    this.output('waitingTime');&#10;    &#10;    this.output('debug');&#10;}&#10;&#10;exports.initialize = function () {&#10;	//InputHandlers add cars to the queues of the corresponding direction &#10;&#10;	this.addInputHandler('inputWest', function() {&#10;		var car = this.get('inputWest');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueW.unshift(car);&#10;		carCount++;&#10;		countW++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputEast', function() {&#10;		var car = this.get('inputEast');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueE.unshift(car);&#10;		carCount++;&#10;		countE++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputSouth', function() {&#10;		var car = this.get('inputSouth');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueS.unshift(car);&#10;		carCount++;&#10;		countS++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;}&#10;&#10;// T-Intersection right-hand-rule&#10;//fires the car which has priority and lets the others wait	&#10;function right_hand_rule() {&#10;	// set to true if car was sent&#10;	var isSentW = false;&#10;	var isSentE = false;&#10;	var isSentS = false;&#10;		&#10;	//debug&#10;	this.send('debug',&quot;queueW &quot; + queueW.length);&#10;	this.send('debug',&quot;queueE &quot; + queueE.length);&#10;	this.send('debug',&quot;queueS &quot; + queueS.length);&#10;	this.send('debug', &quot;carCount &quot; + carCount);&#10;&#10;	// street west&#10;	if(queueW.length != 0) { // car from WEST&#10;		this.send('debug',&quot;queueW car &quot; + queueW[queueW.length - 1].carId); // debug&#10;		if(queueW[queueW.length - 1].indicator == 0) { // WEST --&gt; straight&#10;			if(queueS.length != 0) { // car from SOUTH&#10;				//stop&#10;			}else if(queueS.length == 0) {&#10;				this.send('outputEast',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}&#10;		}else if(queueW[queueW.length - 1].indicator == 1) { // WEST --&gt; right&#10;			this.send('outputSouth',queueW[queueW.length - 1]);&#10;			isSentW = true;&#10;		}&#10;	}&#10;			&#10;	// street east&#10;	if(queueE.length != 0) { // car from EAST&#10;		this.send('debug',&quot;queueE car &quot; + queueE[queueE.length - 1].carId); // debug&#10;		if(queueE[queueE.length - 1].indicator == 0) { // EAST --&gt; straight&#10;			this.send('outputWest',queueE[queueE.length - 1]);&#10;			isSentE = true;&#10;		}else if(queueE[queueE.length - 1].indicator == -1) { // EAST --&gt; left&#10;			if(queueW.length != 0 &amp;&amp; queueS.length != 0) { // special case:&#10;				if (queueS[queueS.length - 1].indicator == -1 &amp;&amp; queueW[queueW.length - 1].indicator == 0) { // West --&gt; straight, EAST --&gt; left, SOUTH --&gt; left&#10;					this.send('outputSouth',queueE[queueE.length - 1]); // convention: EAST goes first&#10;					isSentE = true;&#10;				}&#10;			}else if(queueW.length == 0) { // no car from west (south does not matter, because east always has priority)&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}&#10;		}&#10;	}&#10;			&#10;	// street south&#10;	if(queueS.length != 0) { // car from SOUTH&#10;		this.send('debug',&quot;queueS car &quot; + queueS[queueS.length - 1].carId); // debug&#10;		if(queueS[queueS.length - 1].indicator == 1) { // SOUTH --&gt; right&#10;			this.send('outputEast',queueS[queueS.length - 1]);&#10;			isSentS = true;&#10;		}else if(queueS[queueS.length - 1].indicator == -1) { // SOUTH --&gt; left&#10;			if(queueE.length != 0) { // car from east&#10;				//stop&#10;			}else if(queueE.length == 0) {&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}&#10;		}&#10;	}&#10;			&#10;	// if car was sent, pop it from queue, decrease counter accordingly&#10;	//and the avg waiting time is sent for analysis&#10;	if(isSentW) {&#10;		var carW = queueW.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carW.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countW--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;	}&#10;			&#10;	if(isSentE) {&#10;		var carE = queueE.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carE.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countE--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;	}&#10;			&#10;	if(isSentS) {&#10;		var carS = queueS.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carS.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countS--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;	}&#10;			&#10;	// repeat if there are still cars in the intersection&#10;	if(carCount != 0) {&#10;		setTimeout(right_hand_rule, 2000);&#10;	}&#10;}">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{335.0, 395.0}">
            </property>
            <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="inputWest" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputEast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputWest" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputEast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="debug" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
            <port name="display" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorW" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="trafficJamDetectorE" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="trafficJamDetectorS" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="waitingTime" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
        </entity>
        <entity name="setIndicatorWest" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from WEST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carWest = this.get('car');&#10;	&#10;	if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 1;&#10;		this.send('output', carWest);&#10;	}&#10;	else if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('EAST')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 0;&#10;		this.send('output', carWest);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[165.0, 385.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[3.0, 0.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[9.0, -7.000000000000011]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[13.0, -1.0000000000000284]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-2.0, -15.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 4.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, -14.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorSouth" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from SOUTH&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carSouth = this.get('car');&#10;	&#10;	if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('EAST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = 1;&#10;		this.send('output', carSouth);&#10;	}&#10;	else if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('WEST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = -1;&#10;		this.send('output', carSouth);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[190.0, 590.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 1.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -6.000000000000016]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, -3.019806626980426E-14]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -14.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 5.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorEast" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from EAST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    &#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carEast = this.get('car');&#10;	&#10;	if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = -1;&#10;		this.send('output', carEast);&#10;	}&#10;	else if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('WEST')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = 0;&#10;		this.send('output', carEast);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[525.0, 375.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 2.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -5.000000000000012]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 0.9999999999999698]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 6.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -12.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
        </entity>
        <entity name="debug" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={526, 490, 359, 246}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[420.8919219970703, 517.3632659912109]">
            </property>
        </entity>
        <entity name="totalIntersectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="carCount">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={395, 329, 642, 334}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[626, 274]">
            </property>
            <property name="useLocalTime" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[250.0, 300.0]">
            </property>
            <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_flipPortsVertical" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="-180">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="219.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="IndividualDirectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="traffic_East, traffic_West, traffic_South">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 12, 1347, 350}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[1331, 290]">
            </property>
            <property name="disconnectGraphOnAbsentValue" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="useLocalTime" class="ptolemy.data.expr.Parameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[575.0, 605.0]">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="219.0"/>
<yRange min="0.0" max="3.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="AvgWaitingTime" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 5, 516, 184}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[500, 124]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[520.0, 300.0]">
            </property>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('input');&#10;	this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('input', function() {&#10;		array.push(this.get('input'));&#10;		if (this.getParameter('analysisFlagAvgTime') == 1) {&#10;			if(array.length == 1) { //function only needs to be called once&#10;				setTimeout(avgTime, 30000);&#10;			}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;	}&#10;	avg = sum/array.length;&#10;	this.send('output', avg);&#10;	setTimeout(avgTime, 30000);&#10;}&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[425.0, 300.0]">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="input" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation11" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation14" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation15" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="outputEast" relation="relation5"/>
        <link port="inputWest" relation="relation7"/>
        <link port="outputWest" relation="relation4"/>
        <link port="inputSouth" relation="relation3"/>
        <link port="outputSouth" relation="relation6"/>
        <link port="inputEast" relation="relation8"/>
        <link port="T-Intersection Right-Hand-Rule.inputWest" relation="relation10"/>
        <link port="T-Intersection Right-Hand-Rule.inputEast" relation="relation9"/>
        <link port="T-Intersection Right-Hand-Rule.inputSouth" relation="relation2"/>
        <link port="T-Intersection Right-Hand-Rule.outputWest" relation="relation4"/>
        <link port="T-Intersection Right-Hand-Rule.outputEast" relation="relation5"/>
        <link port="T-Intersection Right-Hand-Rule.outputSouth" relation="relation6"/>
        <link port="T-Intersection Right-Hand-Rule.display" relation="relation11"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorW" relation="relation13"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorE" relation="relation12"/>
        <link port="T-Intersection Right-Hand-Rule.trafficJamDetectorS" relation="relation14"/>
        <link port="T-Intersection Right-Hand-Rule.waitingTime" relation="relation"/>
        <link port="setIndicatorWest.car" relation="relation7"/>
        <link port="setIndicatorWest.output" relation="relation10"/>
        <link port="setIndicatorSouth.car" relation="relation3"/>
        <link port="setIndicatorSouth.output" relation="relation2"/>
        <link port="setIndicatorEast.car" relation="relation8"/>
        <link port="setIndicatorEast.output" relation="relation9"/>
        <link port="totalIntersectionCount.input" relation="relation11"/>
        <link port="IndividualDirectionCount.input" relation="relation12"/>
        <link port="IndividualDirectionCount.input" relation="relation13"/>
        <link port="IndividualDirectionCount.input" relation="relation14"/>
        <link port="AvgWaitingTime.input" relation="relation15"/>
        <link port="AvgTime.input" relation="relation"/>
        <link port="AvgTime.output" relation="relation15"/>
    </entity>
    <entity name="Cross-Intersection(4)" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[666.8931956842291, 270.09398647289163]">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={438, 152, 928, 616}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 499]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{464.53297738693465, 415.1575062814071}">
        </property>
        <property name="intersectionId" class="ptolemy.data.expr.Parameter" value="4">
        </property>
        <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="5">
        </property>
        <property name="WEST" class="ptolemy.data.expr.Parameter" value="3">
        </property>
        <property name="EAST" class="ptolemy.data.expr.Parameter" value="12">
        </property>
        <property name="NORTH" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
            <property name="italic" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="intersection-model that consists of &quot;setIndicator&quot; from each direction,&#10;that sets the indicator of the cars accordingly to their wanted direction.&#10;In the intersection the cars are sent to their prior setIndicator-direction.&#10;The two TimedPlotter are analysis tools for checking the workload.&#10;The AvgTime Actor computes the average waiting time in this intersection and&#10;is for analysis purposes.">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[480.0, 215.0]">
            </property>
        </property>
        <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="IntersectionFlagAvgTime">
        </property>
        <port name="EastOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[495.0, 475.0]">
            </property>
        </port>
        <port name="WestIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, 395.0]">
            </property>
        </port>
        <port name="WestOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[105.0, 430.0]">
            </property>
        </port>
        <port name="SouthIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 600.0]">
            </property>
        </port>
        <port name="SouthOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[405.0, 585.0]">
            </property>
        </port>
        <port name="EastIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[585.0, 490.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
        </port>
        <port name="NorthIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 195.0]">
            </property>
        </port>
        <port name="NorthOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[395.0, 290.0]">
            </property>
        </port>
        <entity name="Cross-Intersection Right-Hand-Rule" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// each intersection contains a street segment prior to the intersection, which is being analyzed by the counter&#10;//the street queues&#10;var queueW = [];&#10;var queueE = [];&#10;var queueS = [];&#10;var queueN = [];&#10;var carCount = 0; // indicates number of cars currently in the intersection&#10;&#10;// counter for the individual directions&#10;var countN = 0;&#10;var countE = 0;&#10;var countS = 0;&#10;var countW = 0;&#10;&#10;// for debug purpose&#10;var date;&#10;&#10;exports.setup = function () {&#10;	//the input-ports for the incoming cars&#10;    this.input('inputWest');&#10;    this.input('inputEast');&#10;    this.input('inputSouth');&#10;    this.input('inputNorth');&#10;    //the output-ports for the leaving cars&#10;    this.output('outputWest');&#10;    this.output('outputEast');&#10;    this.output('outputSouth');&#10;    this.output('outputNorth');&#10;    //the output-ports for analysis&#10;    this.output('display');&#10;    this.output('trafficJamDetectorN');&#10;    this.output('trafficJamDetectorE');&#10;    this.output('trafficJamDetectorS');&#10;    this.output('trafficJamDetectorW');&#10;    this.output('waitingTime');&#10;    &#10;    this.output('debug');&#10;}&#10;&#10;exports.initialize = function () {&#10;	//InputHandlers add cars to the queues of the corresponding direction&#10;	&#10;	this.addInputHandler('inputWest', function() {&#10;		var car = this.get('inputWest');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueW.unshift(car);&#10;		carCount++;&#10;		countW++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputEast', function() {&#10;		var car = this.get('inputEast');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueE.unshift(car);&#10;		carCount++;&#10;		countE++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputSouth', function() {&#10;		var car = this.get('inputSouth');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueS.unshift(car);&#10;		carCount++;&#10;		countS++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;	&#10;	this.addInputHandler('inputNorth', function() {&#10;		var car = this.get('inputNorth');&#10;		car.time = Math.round(new Date().getTime() / 1000); //gets a unix timestamp is rounded and converted to seconds&#10;		queueN.unshift(car);&#10;		carCount++;&#10;		countN++;&#10;		// send counters for analysis&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorN', countN);&#10;		// call right hand rule only if the car is the first in the intersection&#10;		if(carCount == 1) {&#10;			setTimeout(right_hand_rule, 2000);&#10;		}&#10;	});&#10;}	&#10;	&#10;// Cross-Intersection right-hand-rule&#10;//fires the car which has priority and lets the others wait	&#10;function right_hand_rule() {&#10;	// set to true if car was sent&#10;	var isSentW = false;&#10;	var isSentE = false;&#10;	var isSentS = false;&#10;	var isSentN = false;&#10;		&#10;	//debug&#10;	this.send('debug',&quot;queueW &quot; + queueW.length);&#10;	this.send('debug',&quot;queueE &quot; + queueE.length);&#10;	this.send('debug',&quot;queueS &quot; + queueS.length);&#10;	this.send('debug',&quot;queueN &quot; + queueN.length);&#10;	this.send('debug', &quot;carCount &quot; + carCount);&#10;		&#10;	// street west&#10;	if(queueW.length != 0) { // car from WEST&#10;		this.send('debug',&quot;CarW &quot; + queueW[queueW.length - 1]); // debug&#10;		if(queueW[queueW.length - 1].indicator == 0) { //WEST --&gt; STRAIGHT&#10;			if(queueS.length != 0) { // car from SOUTH&#10;				//stop&#10;			}else {&#10;				this.send('outputEast',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}&#10;		}else if(queueW[queueW.length - 1].indicator == 1) { // WEST --&gt; RIGHT&#10;			this.send('outputSouth',queueW[queueW.length - 1]);&#10;			isSentW = true;&#10;		}else if(queueW[queueW.length - 1].indicator == -1) { // WEST --&gt; LEFT&#10;			if(queueE.length != 0 &amp;&amp; queueE[queueE.length - 1].indicator == -1) { // car from EAST&#10;				this.send('outputNorth',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}else if(queueS.length != 0) { // car from SOUTH&#10;				// stop&#10;			}else{&#10;				this.send('outputNorth',queueW[queueW.length - 1]);&#10;				isSentW = true;&#10;			}&#10;		}&#10;	}&#10;	&#10;	//street east	&#10;	if(queueE.length != 0) { // car from EAST&#10;		this.send('debug',&quot;CarE &quot; + queueE[queueE.length - 1]); //debug&#10;		if(queueE[queueE.length - 1].indicator == 0) { // EAST -&gt; STRAIGHT&#10;			if(queueN.length != 0) { // car from NORTH&#10;				// stop&#10;			}else{ // no car from NORTH&#10;				this.send('outputWest',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}&#10;		}else if(queueE[queueE.length - 1].indicator == -1) { // EAST -&gt; LEFT&#10;			if(queueW.length != 0 &amp;&amp; queueW[queueW.length - 1].indicator == -1) { // car from WEST&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}else if(queueN.length != 0) { // car from NORTH&#10;				// stop&#10;			}else{&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;				isSentE = true;&#10;			}&#10;		}else if(queueE[queueE.length - 1].indicator == 1) { // EAST -&gt; RIGHT&#10;			this.send('outputNorth',queueE[queueE.length - 1]);&#10;			isSentE = true;&#10;		}&#10;	}&#10;	&#10;	// street south	&#10;	if(queueS.length != 0) { // car from SOUTH&#10;		this.send('debug',&quot;CarS &quot; + queueS[queueS.length - 1]); //debug&#10;		if(queueS[queueS.length - 1].indicator == 1) { // SOUTH -&gt; RIGHT&#10;			this.send('outputEast',queueS[queueS.length - 1]);&#10;			isSentS = true;&#10;		}else if(queueS[queueS.length - 1].indicator == -1) { // SOUTH -&gt; LEFT&#10;			if(queueE.length != 0) { //car from EAST&#10;				//stop&#10;			}else if(queueN.length != 0 &amp;&amp; queueN[queueN.length - 1].indicator == -1) { //car from NORTH&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}else{&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}&#10;		}else if (queueS[queueS.length - 1].indicator == 0) { //SOUTH -&gt; STRAIGHT&#10;			if (queueE.length != 0) { // car from EAST&#10;				// stop&#10;			}else {&#10;				this.send('outputNorth',queueS[queueS.length - 1]);&#10;				isSentS = true;&#10;			}&#10;		}&#10;	}&#10;	&#10;	//street north		&#10;	if(queueN.length != 0) { // car from NORTH		&#10;		this.send('debug',&quot;CarN &quot; + queueN[queueN.length - 1]);&#10;		if(queueN[queueN.length - 1].indicator == 1) { // NORTH -&gt; RIGHT&#10;			this.send('outputWest',queueN[queueN.length - 1]);&#10;			isSentN = true;&#10;		}else if(queueN[queueN.length - 1].indicator == -1) { // NORTH -&gt; LEFT&#10;			if(queueW.length != 0) { //car from WEST&#10;				//stop&#10;			}else if(queueS.length != 0 &amp;&amp; queueS[queueS.length - 1].indicator == -1) { //car from SOUTH&#10;				this.send('outputEast',queueN[queueN.length - 1]);&#10;				isSentN = true;&#10;			}else{&#10;				this.send('outputEast',queueN[queueN.length - 1]);&#10;				isSentN = true;&#10;			}&#10;		}else if(queueN[queueN.length - 1].indicator == 0) { //NORTH -&gt; STRAIGHT&#10;			if(queueW.length != 0) { // car from WEST&#10;				// stop&#10;			}else{&#10;				this.send('outputSouth',queueN[queueN.length - 1]);&#10;				isSentN = true;&#10;			}&#10;		}&#10;	}&#10;		&#10;	//Special case if there is a car on each side of the intersection and no car could drive&#10;	//decides randomly which car can drive&#10;	if(!isSentW &amp;&amp; !isSentE &amp;&amp; !isSentS &amp;&amp; !isSentN) {&#10;		//0 = West, 1 = East, 2 = South, 3 = North&#10;		var random = Math.floor(Math.random() * 3);&#10;		&#10;		//sends information to debug-ports	&#10;		this.send('debug',&quot;queueW RAND &quot; + queueW.length);&#10;		this.send('debug',&quot;queueE RAND &quot; + queueE.length);&#10;		this.send('debug',&quot;queueS RAND &quot; + queueS.length);&#10;		this.send('debug',&quot;queueN RAND &quot; + queueN.length);&#10;		this.send('debug', &quot;carCount RAND &quot; + carCount);&#10;		this.send('debug', &quot;random numb: &quot; + random);&#10;			&#10;		if(random == 0) {&#10;			if(queueW[queueW.length - 1].indicator == 0) {&#10;				this.send('outputEast',queueW[queueW.length - 1]);&#10;			}&#10;			else if(queueW[queueW.length - 1].indicator == 1) {&#10;				this.send('outputSouth',queueW[queueW.length - 1]);&#10;			}&#10;			else if(queueW[queueW.length - 1].indicator == -1) {&#10;				this.send('outputNorth',queueW[queueW.length - 1]);&#10;			}&#10;			isSentW = true;&#10;		}&#10;			&#10;		else if(random == 1) {&#10;			if(queueE[queueE.length - 1].indicator == 0) {&#10;				this.send('outputWest',queueE[queueE.length - 1]);&#10;			}&#10;			else if(queueE[queueE.length - 1].indicator == 1) {&#10;				this.send('outputNorth',queueE[queueE.length - 1]);&#10;			}&#10;			else if(queueE[queueE.length - 1].indicator == -1) {&#10;				this.send('outputSouth',queueE[queueE.length - 1]);&#10;			}	&#10;			isSentE = true;&#10;		}&#10;			&#10;		else if(random == 2) {&#10;			if(queueS[queueS.length - 1].indicator == 0) {&#10;				this.send('outputNorth',queueS[queueS.length - 1]);&#10;			}&#10;			else if(queueS[queueS.length - 1].indicator == 1) {&#10;				this.send('outputEast',queueS[queueS.length - 1]);&#10;			}&#10;			else if(queueS[queueS.length - 1].indicator == -1) {&#10;				this.send('outputWest',queueS[queueS.length - 1]);&#10;			}	&#10;			isSentS = true;&#10;		}&#10;		&#10;		else if(random == 3) {&#10;			if(queueN[queueN.length - 1].indicator == 0) {&#10;				this.send('outputSouth',queueN[queueN.length - 1]);&#10;			}&#10;			else if(queueN[queueN.length - 1].indicator == 1) {&#10;				this.send('outputWest',queueN[queueN.length - 1]);&#10;			}&#10;			else if(queueN[queueN.length - 1].indicator == -1) {&#10;				this.send('outputEast',queueN[queueN.length - 1]);&#10;			}&#10;			isSentN = true;&#10;		}&#10;	}&#10;	&#10;	// if car was sent, pop it from queue, decrease counter accordingly&#10;	if(isSentW) {&#10;		var carW = queueW.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carW.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countW--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorW', countW);&#10;	}&#10;		&#10;	if(isSentE) {&#10;		var carE = queueE.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carE.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countE--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorE', countE);&#10;	}&#10;		&#10;	if(isSentS) {&#10;		var carS = queueS.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carS.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countS--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorS', countS);&#10;	}&#10;		&#10;	if(isSentN) {&#10;		var carN = queueN.pop();&#10;		var waitingTime = Math.round(new Date().getTime() / 1000) - carN.time;&#10;		this.send('waitingTime', waitingTime); &#10;		carCount--;&#10;		countN--;&#10;		this.send('display', carCount);&#10;		this.send('trafficJamDetectorN', countN);&#10;	}&#10;	&#10;	// repeat if there are still cars in the intersection	&#10;	if(carCount != 0) {&#10;		setTimeout(right_hand_rule, 2000);&#10;	}&#10;}&#10;&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{335.0, 395.0}">
            </property>
            <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="display" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorN" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorE" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
            </port>
            <port name="trafficJamDetectorS" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="trafficJamDetectorW" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_type" class="ptolemy.actor.TypeAttribute" value="double">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputWest" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="inputEast" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="inputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="inputNorth" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="outputWest" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="outputEast" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="outputSouth" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="outputNorth" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="debug" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="waitingTime" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorWest" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from WEST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carWest = this.get('car');&#10;	&#10;	if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 1;&#10;		this.send('output', carWest);&#10;	}&#10;	else if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('EAST')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = 0;&#10;		this.send('output', carWest);&#10;	}&#10;	else if(carWest.roadMap[carWest.intersectionCount] == this.getParameter('NORTH')) {&#10;		carWest.intersectionCount = carWest.intersectionCount + 1;&#10;		carWest.indicator = -1;&#10;		this.send('output', carWest);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[65.0, 395.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[3.0, 0.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[9.0, -7.000000000000011]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[13.0, -1.0000000000000284]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-2.0, -15.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 4.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, -14.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="NORTH" class="ptolemy.data.expr.Parameter" value="NORTH">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorSouth" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from SOUTH&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carSouth = this.get('car');&#10;	&#10;	if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('EAST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = 1;&#10;		this.send('output', carSouth);&#10;	}&#10;	else if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('WEST')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = -1;&#10;		this.send('output', carSouth);&#10;	}&#10;	else if(carSouth.roadMap[carSouth.intersectionCount] == this.getParameter('NORTH')) {&#10;		carSouth.intersectionCount = carSouth.intersectionCount + 1;&#10;		carSouth.indicator = 0;&#10;		this.send('output', carSouth);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[210.0, 600.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 1.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -6.000000000000016]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, -3.019806626980426E-14]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -14.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 5.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <property name="NORTH" class="ptolemy.data.expr.Parameter" value="NORTH">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="setIndicatorEast" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from EAST&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carEast = this.get('car');&#10;	&#10;	if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = -1;&#10;		this.send('output', carEast);&#10;	}&#10;	else if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('WEST')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = 0;&#10;		this.send('output', carEast);&#10;	}&#10;	else if(carEast.roadMap[carEast.intersectionCount] == this.getParameter('NORTH')) {&#10;		carEast.intersectionCount = carEast.intersectionCount + 1;&#10;		carEast.indicator = 1;&#10;		this.send('output', carEast);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[550.0, 445.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 2.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[6.0, -5.000000000000012]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[10.0, 0.9999999999999698]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-5.0, -13.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[17.0, 6.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[2.0, -12.000000000000002]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="NORTH" class="ptolemy.data.expr.Parameter" value="NORTH">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
        </entity>
        <entity name="setIndicatorNorth" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from NORTH&#10;// increases the intersection counter by 1&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;};&#10;&#10;exports.fire = function () {&#10;	carNorth = this.get('car');&#10;	&#10;	if(carNorth.roadMap[carNorth.intersectionCount] == this.getParameter('SOUTH')) {&#10;		carNorth.intersectionCount = carNorth.intersectionCount + 1;&#10;		carNorth.indicator = 0;&#10;		this.send('output', carNorth);&#10;	}&#10;	else if(carNorth.roadMap[carNorth.intersectionCount] == this.getParameter('EAST')) {&#10;		carNorth.intersectionCount = carNorth.intersectionCount + 1;&#10;		carNorth.indicator = -1;&#10;		this.send('output', carNorth);&#10;	}&#10;	else if(carNorth.roadMap[carNorth.intersectionCount] == this.getParameter('WEST')) {&#10;		carNorth.intersectionCount = carNorth.intersectionCount + 1;&#10;		carNorth.indicator = 1;&#10;		this.send('output', carNorth);&#10;	}&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[335.0, 245.0]">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                <property name="arc" class="ptolemy.vergil.kernel.attributes.ArcAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[3.0, 0.0]">
                    </property>
                    <property name="width" class="ptolemy.data.expr.Parameter" value="36.0">
                    </property>
                    <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                    </property>
                    <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,0.0,1.0}">
                    </property>
                </property>
                <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[9.0, -7.000000000000011]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="125.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[13.0, -1.0000000000000284]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="100.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[-2.0, -15.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 4.999999999999972]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="135.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
                <property name="line5" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, -14.0]">
                    </property>
                    <property name="rotation" class="ptolemy.data.expr.Parameter" value="115.0">
                    </property>
                    <property name="x" class="ptolemy.data.expr.Parameter" value="5.0">
                    </property>
                    <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                    </property>
                </property>
            </property>
            <property name="SOUTH" class="ptolemy.data.expr.Parameter" value="SOUTH">
            </property>
            <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="90">
            </property>
            <property name="WEST" class="ptolemy.data.expr.Parameter" value="WEST">
            </property>
            <property name="EAST" class="ptolemy.data.expr.Parameter" value="EAST">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="Display" class="ptolemy.actor.lib.gui.Display">
            <display name="Debug"/>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={521, 738, 359, 246}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[200.0, 490.0]">
            </property>
        </entity>
        <entity name="totalIntersectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="carCount">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={34, 273, 642, 334}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[626, 274]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[170.0, 295.0]">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="201.0"/>
<yRange min="0.0" max="4.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="individualDirectionCount" class="ptolemy.actor.lib.gui.TimedPlotter">
            <property name="legend" class="ptolemy.kernel.util.StringAttribute" value="traffic_North, traffic_East, traffic_South, traffic_West">
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={28, 308, 642, 334}, maximized=false}">
            </property>
            <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[626, 274]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[995.0, 695.0]">
            </property>
            <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="17.0" max="201.0"/>
<yRange min="0.0" max="2.0"/>
</plot>?>
            </configure>
        </entity>
        <entity name="AvgTime" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//this javascript actor sends the average time of how long the cars stay &#10;//in an intersection every 30 seconds&#10;var array = [];&#10;&#10;exports.setup = function () {&#10;	this.input('input');&#10;	this.output('output');&#10;}&#10;&#10;exports.initialize = function () {&#10;	this.addInputHandler('input', function() {&#10;		array.push(this.get('input'));&#10;		if (this.getParameter('analysisFlagAvgTime') == 1) {&#10;			if(array.length == 1) { //function only needs to be called once&#10;			setTimeout(avgTime, 30000);&#10;		}&#10;		}&#10;	});&#10;}&#10;&#10;function avgTime() {&#10;	var sum = 0;&#10;	var avg = 0;&#10;	for (count = 0; count &lt; array.length; count++) {&#10;		sum += array[count];&#10;	}&#10;	avg = sum/array.length;&#10;	this.send('output', avg);&#10;	setTimeout(avgTime, 30000);&#10;}&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[455.0, 540.0]">
            </property>
            <property name="analysisFlagAvgTime" class="ptolemy.data.expr.Parameter" value="analysisFlagAvgTime">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
            <port name="input" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
        </entity>
        <entity name="AvgWaitingTime" class="ptolemy.actor.lib.gui.Display">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 528, 502, 205}, maximized=false}">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[486, 145]">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[540.0, 540.0]">
            </property>
        </entity>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation11" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation13" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation14" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation15" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation16" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation17" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation18" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation19" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="EastOut" relation="relation10"/>
        <link port="WestIn" relation="relation7"/>
        <link port="WestOut" relation="relation"/>
        <link port="SouthIn" relation="relation3"/>
        <link port="SouthOut" relation="relation6"/>
        <link port="EastIn" relation="relation8"/>
        <link port="NorthIn" relation="relation11"/>
        <link port="NorthOut" relation="relation4"/>
        <link port="Cross-Intersection Right-Hand-Rule.display" relation="relation13"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorN" relation="relation14"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorE" relation="relation15"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorS" relation="relation16"/>
        <link port="Cross-Intersection Right-Hand-Rule.trafficJamDetectorW" relation="relation17"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputWest" relation="relation2"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputEast" relation="relation12"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputSouth" relation="relation9"/>
        <link port="Cross-Intersection Right-Hand-Rule.inputNorth" relation="relation5"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputWest" relation="relation"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputEast" relation="relation10"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputSouth" relation="relation6"/>
        <link port="Cross-Intersection Right-Hand-Rule.outputNorth" relation="relation4"/>
        <link port="Cross-Intersection Right-Hand-Rule.waitingTime" relation="relation18"/>
        <link port="setIndicatorWest.car" relation="relation7"/>
        <link port="setIndicatorWest.output" relation="relation2"/>
        <link port="setIndicatorSouth.car" relation="relation3"/>
        <link port="setIndicatorSouth.output" relation="relation9"/>
        <link port="setIndicatorEast.car" relation="relation8"/>
        <link port="setIndicatorEast.output" relation="relation12"/>
        <link port="setIndicatorNorth.car" relation="relation11"/>
        <link port="setIndicatorNorth.output" relation="relation5"/>
        <link port="totalIntersectionCount.input" relation="relation13"/>
        <link port="individualDirectionCount.input" relation="relation14"/>
        <link port="individualDirectionCount.input" relation="relation15"/>
        <link port="individualDirectionCount.input" relation="relation16"/>
        <link port="individualDirectionCount.input" relation="relation17"/>
        <link port="AvgTime.input" relation="relation18"/>
        <link port="AvgTime.output" relation="relation19"/>
        <link port="AvgWaitingTime.input" relation="relation19"/>
    </entity>
    <relation name="relation47" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation19" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation9" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation31" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation34" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation45" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation46" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation18" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation22" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation36" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation43" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation26" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation28" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation32" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation41" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation44" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation48" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation25" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation14" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation16" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation21" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation42" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation10" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation15" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation17" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation20" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation24" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation49" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation13" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation27" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation38" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation39" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation40" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation11" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation12" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation23" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation29" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation30" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation33" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation35" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation37" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="T-Intersection (1).outputEast" relation="relation22"/>
    <link port="T-Intersection (1).inputWest" relation="relation45"/>
    <link port="T-Intersection (1).outputWest" relation="relation46"/>
    <link port="T-Intersection (1).inputSouth" relation="relation43"/>
    <link port="T-Intersection (1).outputSouth" relation="relation36"/>
    <link port="T-Intersection (1).inputEast" relation="relation18"/>
    <link port="Cross-Intersection(3).EastOut" relation="relation4"/>
    <link port="Cross-Intersection(3).WestIn" relation="relation41"/>
    <link port="Cross-Intersection(3).WestOut" relation="relation44"/>
    <link port="Cross-Intersection(3).SouthIn" relation="relation14"/>
    <link port="Cross-Intersection(3).SouthOut" relation="relation16"/>
    <link port="Cross-Intersection(3).EastIn" relation="relation6"/>
    <link port="Cross-Intersection(3).NorthIn" relation="relation26"/>
    <link port="Cross-Intersection(3).NorthOut" relation="relation28"/>
    <link port="Output 5.input" relation="relation31"/>
    <link port="carCounter (1).increment" relation="relation34"/>
    <link port="carCounter (1).output" relation="relation47"/>
    <link port="Output 1.input" relation="relation47"/>
    <link port="Output 2.input" relation="relation8"/>
    <link port="Output 3.input" relation="relation19"/>
    <link port="Output 4.input" relation="relation9"/>
    <link port="CarInput (1).output" relation="relation"/>
    <link port="CarInput (5).output" relation="relation5"/>
    <link port="CarInput (4).output" relation="relation32"/>
    <link port="CarInput (3).output" relation="relation21"/>
    <link port="CarInput (2).output" relation="relation25"/>
    <link port="carCounter (5).increment" relation="relation7"/>
    <link port="carCounter (5).output" relation="relation8"/>
    <link port="carCounter (4).increment" relation="relation48"/>
    <link port="carCounter (4).output" relation="relation19"/>
    <link port="carCounter (3).increment" relation="relation42"/>
    <link port="carCounter (3).output" relation="relation9"/>
    <link port="carCounter (2).increment" relation="relation2"/>
    <link port="carCounter (2).output" relation="relation31"/>
    <link port="streetExtension.leftRightInput" relation="relation"/>
    <link port="streetExtension.leftRightOutput" relation="relation45"/>
    <link port="streetExtension.rightLeftInput" relation="relation46"/>
    <link port="streetExtension.rightLeftOutput" relation="relation34"/>
    <link port="streetExtension2.leftRightInput" relation="relation5"/>
    <link port="streetExtension2.leftRightOutput" relation="relation15"/>
    <link port="streetExtension2.rightLeftInput" relation="relation17"/>
    <link port="streetExtension2.rightLeftOutput" relation="relation7"/>
    <link port="streetExtension3.leftRightInput" relation="relation10"/>
    <link port="streetExtension3.leftRightOutput" relation="relation18"/>
    <link port="streetExtension3.rightLeftInput" relation="relation22"/>
    <link port="streetExtension3.rightLeftOutput" relation="relation20"/>
    <link port="streetExtension4.leftRightInput" relation="relation36"/>
    <link port="streetExtension4.leftRightOutput" relation="relation23"/>
    <link port="streetExtension4.rightLeftInput" relation="relation29"/>
    <link port="streetExtension4.rightLeftOutput" relation="relation43"/>
    <link port="streetExtension5.leftRightInput" relation="relation24"/>
    <link port="streetExtension5.leftRightOutput" relation="relation26"/>
    <link port="streetExtension5.rightLeftInput" relation="relation28"/>
    <link port="streetExtension5.rightLeftOutput" relation="relation49"/>
    <link port="streetExtension6.leftRightInput" relation="relation32"/>
    <link port="streetExtension6.leftRightOutput" relation="relation41"/>
    <link port="streetExtension6.rightLeftInput" relation="relation44"/>
    <link port="streetExtension6.rightLeftOutput" relation="relation48"/>
    <link port="streetExtension7.leftRightInput" relation="relation4"/>
    <link port="streetExtension7.leftRightOutput" relation="relation11"/>
    <link port="streetExtension7.rightLeftInput" relation="relation12"/>
    <link port="streetExtension7.rightLeftOutput" relation="relation6"/>
    <link port="streetExtension8.leftRightInput" relation="relation30"/>
    <link port="streetExtension8.leftRightOutput" relation="relation2"/>
    <link port="streetExtension8.rightLeftInput" relation="relation25"/>
    <link port="streetExtension8.rightLeftOutput" relation="relation33"/>
    <link port="streetExtension9.leftRightInput" relation="relation39"/>
    <link port="streetExtension9.leftRightOutput" relation="relation37"/>
    <link port="streetExtension9.rightLeftInput" relation="relation35"/>
    <link port="streetExtension9.rightLeftOutput" relation="relation40"/>
    <link port="streetExtension10.leftRightInput" relation="relation27"/>
    <link port="streetExtension10.leftRightOutput" relation="relation14"/>
    <link port="streetExtension10.rightLeftInput" relation="relation16"/>
    <link port="streetExtension10.rightLeftOutput" relation="relation38"/>
    <link port="streetExtension11.leftRightInput" relation="relation21"/>
    <link port="streetExtension11.leftRightOutput" relation="relation3"/>
    <link port="streetExtension11.rightLeftInput" relation="relation13"/>
    <link port="streetExtension11.rightLeftOutput" relation="relation42"/>
    <link port="T-Intersection (2).outputEast" relation="relation10"/>
    <link port="T-Intersection (2).inputWest" relation="relation15"/>
    <link port="T-Intersection (2).outputWest" relation="relation17"/>
    <link port="T-Intersection (2).inputSouth" relation="relation49"/>
    <link port="T-Intersection (2).outputSouth" relation="relation24"/>
    <link port="T-Intersection (2).inputEast" relation="relation20"/>
    <link port="T-Intersection (5).outputEast" relation="relation27"/>
    <link port="T-Intersection (5).inputWest" relation="relation3"/>
    <link port="T-Intersection (5).outputWest" relation="relation13"/>
    <link port="T-Intersection (5).inputSouth" relation="relation40"/>
    <link port="T-Intersection (5).outputSouth" relation="relation39"/>
    <link port="T-Intersection (5).inputEast" relation="relation38"/>
    <link port="Cross-Intersection(4).EastOut" relation="relation30"/>
    <link port="Cross-Intersection(4).WestIn" relation="relation11"/>
    <link port="Cross-Intersection(4).WestOut" relation="relation12"/>
    <link port="Cross-Intersection(4).SouthIn" relation="relation37"/>
    <link port="Cross-Intersection(4).SouthOut" relation="relation35"/>
    <link port="Cross-Intersection(4).EastIn" relation="relation33"/>
    <link port="Cross-Intersection(4).NorthIn" relation="relation23"/>
    <link port="Cross-Intersection(4).NorthOut" relation="relation29"/>
</entity>
