// T-Intersection right-hand-rule
//fires the car which has priority and lets the others wait
exports.setup = function () {
	//the Input-ports for the incoming cars
    this.input('carWEST');
    this.input('carEAST');
    this.input('carSOUTH');
    //the Output-ports for the leaving cars
    this.output('OWEST');
    this.output('OEAST');
    this.output('OSOUTH');
    //the Output-ports for cars that have to wait
    this.output('waitW');
    this.output('waitE');
    this.output('waitS');
}

exports.initialize = function () {
	//creates an Array that contains the cars that stand in an Intersection
	//the Array position is relevant 0 = WEST, 1 = EAST and 2 = SOUTH
	var cars = [];
	cars.length = 3;
	
	this.addInputHandler('carWEST', function() {
	cars[0] = this.get('carWEST');
	if(cars[1] == null && cars[2] == null) {
		setTimeout(priority, 3000, cars);
		cars = [];
		cars.length = 3;
	}
	});
	
	this.addInputHandler('carEAST', function() {
	cars[1] = this.get('carEAST');
	if(cars[0] == null && cars[2] == null) {
		setTimeout(priority, 3000, cars);
		cars = [];
		cars.length = 3;
	}
	});
	
	this.addInputHandler('carSOUTH', function() {
	cars[2] = this.get('carSOUTH');
	if(cars[0] == null && cars[1] == null) {
		setTimeout(priority, 3000, cars);
		cars = [];
		cars.length = 3;
	}
	});
	
	function priority(cars) {
		var carW = cars[0];
		var carE = cars[1];
		var carS = cars[2];
		var carWSent = false;
		var carESent = false;
		var carSSent = false;
		
		if(carW != null) {
			if(carW.indicator == 0) {
				if(carS != null) {
					if(carS.indicator == 1) {
						//stop
					}else if(carS.indicator == -1) {
						//stop
					}
				}else if(carS == null) {
					carWSent = true;
					this.send('OEAST',carW);
				}
			}else if(carW.indicator == 1) {
				if(carS != null) {
					if(carS.indicator == 1) {
						carWSent = true;
						this.send('OSOUTH',carW);
					}else if(carS.indicator == -1) {
						carWSent = true;
						this.send('OSOUTH',carW);
					}
				}else if(carS == null) {
					carWSent = true;
					this.send('OSOUTH',carW);
				}
			}
		}
		
		if(carE != null) {
			if(carE.indicator == 0) {
				carESent = true;
				this.send('OWEST',carE);
			}else if(carE.Indicator == -1) {
				if(carW != null) {
					if(carW.indicator == 0) {
						//stop
					}else if(carW.indicator == 1) {
						//stop
					}
				}else if(carW == null) {
					carESent = true;
					this.send('OSOUTH',carE);
				}
			}
		}
		
		if(carS != null) {
			if(carS.indicator == 1) {
				carSSent = true;
				this.send('OEAST',carS);
			}else if(carS.indicator == -1) {
				if(carE != null) {
					//stop
				}else if(carE == null) {
					carSSent = true;
					this.send('OWEST',carS);
				}
			}
		}
		//carW straight priority
		/*if(carW.indicator == 0 && carE.indicator == 0 || carW.indicator == 0 && carE == null || carW.indicator == 0 && carE.indicator == -1 || carW.indicator == 0 && carS == null) {
			this.send('OEAST',carW);
		}
		//carW right priority
		else if(carW.indicator == 1 && carE.indicator == 0 || carW.indicator == 1 && carE.indicator == -1 || carW.indicator == 1 && carE == null || carW.indicator == 1 && carS.indicator == 1 || carW.indicator == 1 && carS.indicator == -1 || carW.indicator == 1 && carS == null) {
			this.send('OSOUTH',carW);
		}
		//carE straight priority
		else if(carE.indicator == 0 && carW.indicator == 0 || carE.indicator == 0 && carW.indicator == 1 || carE.indicator == 0 && carW == null || carE.indicator == 0 && carS.indicator == 1 || carE.indicator == 0 && carS.indicator == -1 || carE.indicator == 0 && carS == null) {
			this.send('OWEST',carE);
		}
		//carE left priority
		else if(carE.indicator == -1 && carW == null || carE.indicator == -1 && carS.indicator == 1 || carE.indicator == -1 && carS == null) {
			this.send('OSOUTH',carE);
		}
		//carS left priority
		else if(carS.indicator == -1 && carW.indicator == 0 || carS.indicator == -1 && carW == null || carS.indicator == -1 && carE == null) {
			this.send('OWEST',carS);
		}
		//carS right priority
		else if(carS.indicator == 1 && carW.indicator == 0 || carS.indicator == 1 && carW.indicator == 1 || carS.indicator == 1 && carW == null || carS.indicator == 1 && carE.indicator == 0 || carS.indicator == 1 && carE.indicator == -1 || carS.indicator == -1 && carE == null) {
			this.send('OEAST',carS);
		}*/
		
		if(!carWSent && carW != null) {
			this.send('waitW', carW);
		}
		
		if(!carESent && carE != null) {
			this.send('waitE', carE);
		}
		
		if(carSSent && carS != null) {
			this.send('waitS', carS);
		}
	}
}
