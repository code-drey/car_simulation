<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="sim-car-intersection-with-ptolemy-moduls" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.1_20180619">
    </property>
<<<<<<< HEAD
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={402, 260, 1149, 617}, maximized=false}">
=======
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{75.0, 75.0}">
        </property>
    </property>
<<<<<<< HEAD
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={39, 334, 1029, 617}, maximized=false}">
=======
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={433, 320, 1029, 617}, maximized=false}">
>>>>>>> c605e716b703b4f361af1ef99f05d732e9ab3d4f
>>>>>>> b84c8f7a72635ee9df6382f2e4cf3acd209315dd
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[801, 500]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{334.44268216080405, 173.13418655778895}">
    </property>
    <property name="CarDirector" class="ptolemy.carsim.kernel.CarDirector">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[120.0, 65.0]">
        </property>
    </property>
    <entity name="CarInput" class="ptolemy.carsim.CarInput">
        <property name="carInputId" class="ptolemy.data.expr.Parameter" value="0">
        </property>
        <property name="connectedIntersections" class="ptolemy.data.expr.Parameter" value="{1}">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{400.0, 145.0}">
        </property>
    </entity>
    <entity name="CSVReader" class="ptolemy.actor.lib.io.CSVReader">
<<<<<<< HEAD
        <property name="fileOrURL" class="ptolemy.actor.parameters.FilePortParameter" value="C:\Users\Drey\Desktop\ptolemy\car_simulation\java\carsim\Cars.txt">
=======
        <property name="fileOrURL" class="ptolemy.actor.parameters.FilePortParameter" value="C:\Ptolemy\ptII11.0.1\ptolemy\carsim\carss.txt">
>>>>>>> c605e716b703b4f361af1ef99f05d732e9ab3d4f
        </property>
        <property name="separator" class="ptolemy.data.expr.StringParameter" value="tab">
        </property>
        <property name="trimSpaces" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{255.0, 155.0}">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="{carId = int, roadMap = arrayType(int, 2), carSpeed = int, fuel = int}">
            </property>
        </port>
    </entity>
    <entity name="PoissonClock" class="ptolemy.actor.lib.PoissonClock">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{90.0, 145.0}">
        </property>
    </entity>
    <entity name="T-Intersection" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[540.0, 155.0]">
        </property>
        <property name="intersectionId" class="ptolemy.data.expr.Parameter" value="1">
        </property>
<<<<<<< HEAD
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={163, 257, 958, 664}, maximized=false}">
=======
<<<<<<< HEAD
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={622, 398, 928, 617}, maximized=false}">
=======
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={254, 242, 928, 617}, maximized=false}">
>>>>>>> c605e716b703b4f361af1ef99f05d732e9ab3d4f
>>>>>>> b84c8f7a72635ee9df6382f2e4cf3acd209315dd
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[730, 547]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{352.0, 481.765625}">
        </property>
        <property name="CIntersectionSOUTH" class="ptolemy.data.expr.Parameter" value="2">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{85, 260}">
            </property>
<<<<<<< HEAD
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <entity name="TimedDisplay" class="ptolemy.actor.lib.gui.TimedDisplay">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[260.0, 300.0]">
            </property>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="west" relation="relation"/>
        <link port="TimedDisplay.input" relation="relation"/>
    </entity>
    <entity name="Intersection2" class="ptolemy.actor.TypedCompositeActor">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{535.0, 245.0}">
        </property>
        <property name="intersectionId" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={336, 671, 998, 617}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 500]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{337.0, 458.265625}">
        </property>
        <port name="west" class="ptolemy.actor.TypedIOPort">
=======
        </property>
        <property name="CIntersectionEAST" class="ptolemy.data.expr.Parameter" value="3">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{85.0, 280.0}">
            </property>
        </property>
        <property name="CIntersectionWEST" class="ptolemy.data.expr.Parameter" value="4">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[85.0, 300.0]">
            </property>
        </property>
        <port name="westIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 385.0]">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
        </port>
        <port name="eastOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[500.0, 465.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="southOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[340.0, 680.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="westOut" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 445.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="southIn" class="ptolemy.actor.TypedIOPort">
>>>>>>> c605e716b703b4f361af1ef99f05d732e9ab3d4f
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 605.0]">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
            </property>
        </port>
        <port name="eastIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[395.0, 265.0]">
            </property>
            <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
            </property>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
<<<<<<< HEAD
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="west" relation="relation"/>
        <link port="north" relation="relation"/>
=======
        <entity name="SetIndicatorWEST" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from WEST&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;    &#10;    this.parameter('CIntersectionSOUTH', {'type':'number', 'value':2});&#10;    this.parameter('CIntersectionEAST', {'type':'number', 'value':3});&#10;    this.parameter('CIntersectionWEST', {'type':'number', 'value':4});&#10;};&#10;&#10;exports.fire = function () {&#10;	car = this.get('car');&#10;	&#10;	if(car.roadMap[1] == this.getParameter('CIntersectionSOUTH')) {&#10;		car.fuel = 1;&#10;	}&#10;	if(car.roadMap[1] == this.getParameter('CIntersectionEAST')) {&#10;		car.fuel = 0;&#10;	}&#10;    this.send('output', car);&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{80.0, 385.0}">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
        </entity>
        <entity name="SetIndicatorSOUTH" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from SOUTH&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;    &#10;    this.parameter('CIntersectionSOUTH', {'type':'number', 'value':2});&#10;    this.parameter('CIntersectionEAST', {'type':'number', 'value':3});&#10;    this.parameter('CIntersectionWEST', {'type':'number', 'value':4});&#10;};&#10;&#10;exports.fire = function () {&#10;	car = this.get('car');&#10;	&#10;	if(car.roadMap[0] == this.getParameter('CIntersectionWEST')) {&#10;		car.fuel = -1;&#10;	}&#10;	if(car.roadMap[0] == this.getParameter('CIntersectionEAST')) {&#10;		car.fuel = 1;&#10;	}&#10;    this.send('output', cars);&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[95.0, 605.0]">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
        </entity>
        <entity name="SetIndicatorEAST" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//Sets the Indicator of a car coming from EAST&#10;//-1 is left, 0 is straight, 1 is right&#10;exports.setup = function () {&#10;    this.input('car');&#10;    this.output('output');&#10;    &#10;    this.parameter('CIntersectionSOUTH', {'type':'number', 'value':2});&#10;    this.parameter('CIntersectionEAST', {'type':'number', 'value':3});&#10;    this.parameter('CIntersectionWEST', {'type':'number', 'value':4});&#10;};&#10;&#10;exports.fire = function () {&#10;	car = this.get('car');&#10;	&#10;	if(car.roadMap[0] == this.getParameter('CIntersectionSOUTH')) {&#10;		car.fuel = -1;&#10;	}&#10;	if(car.roadMap[0] == this.getParameter('CIntersectionWEST')) {&#10;		car.fuel = 0;&#10;	}&#10;    this.send('output', car);&#10;};">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[490.0, 265.0]">
            </property>
            <port name="output" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
            </port>
            <port name="car" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
            </port>
        </entity>
        <entity name="T-Intersection Right-Hand-Rule" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// T-Intersection right-hand-rule&#10;//fires the car which has priority and lets the others wait&#10;exports.setup = function () {&#10;	//the Input-ports for the incoming cars&#10;    this.input('carWEST');&#10;    this.input('carEAST');&#10;    this.input('carSOUTH');&#10;    //the Output-ports for the leaving cars&#10;    this.output('OWEST');&#10;    this.output('OEAST');&#10;    this.output('OSOUTH');&#10;    //the Output-ports for cars that have to wait&#10;    this.output('waitW');&#10;    this.output('waitE');&#10;    this.output('waitS');&#10;}&#10;&#10;exports.initialize = function () {&#10;	//creates an Array that contains the cars that stand in an Intersection&#10;	//the Array position is relevant 0 = WEST, 1 = EAST and 2 = SOUTH&#10;	var cars = [];&#10;	cars.length = 3;&#10;	&#10;	this.addInputHandler('carWEST', function() {&#10;	carW = this.get('carWEST');&#10;	cars[0] = carW;&#10;	if(cars[1] == null &amp;&amp; cars[2] == null) {&#10;		setTimeout(priority(cars), 3000);&#10;	}&#10;	});&#10;	&#10;	this.addInputHandler('carEAST', function() {&#10;	carE = this.get('carEAST');&#10;	cars[1] = carE;&#10;	if(cars[0] == null &amp;&amp; cars[2] == null) {&#10;		setTimeout(priority(cars), 3000);&#10;	}&#10;	});&#10;	&#10;	this.addInputHandler('carSOUTH', function() {&#10;	carS = this.get('carSOUTH');&#10;	cars[2] = carW;&#10;	if(cars[0] == null &amp;&amp; cars[1] == null) {&#10;		setTimeout(priority(cars), 3000);&#10;	}&#10;	});&#10;	&#10;	function priority(cars) {&#10;		var carW = cars[0];&#10;		var carE = cars[1];&#10;		var carS = cars[2];&#10;		try {&#10;		//carW straight priority&#10;		if(carW.fuel == 0 &amp;&amp; carE.fuel == 0 || carW.fuel == 0 &amp;&amp; carE == null || carW.fuel == 0 &amp;&amp; carE.fuel == -1 || carW.fuel == 0 &amp;&amp; carS == null) {&#10;			this.send('OEAST',carW);&#10;		}&#10;		//carW right priority&#10;		else if(carW.fuel == 1 &amp;&amp; carE.fuel == 0 || carW.fuel == 1 &amp;&amp; carE.fuel == -1 || carW.fuel == 1 &amp;&amp; carE == null || carW.fuel == 1 &amp;&amp; carS.fuel == 1 || carW.fuel == 1 &amp;&amp; carS.fuel == -1 || carW.fuel == 1 &amp;&amp; carS == null) {&#10;			this.send('OSOUTH',carW);&#10;		}&#10;		//carE straight priority&#10;		else if(carE.fuel == 0 &amp;&amp; carW.fuel == 0 || carE.fuel == 0 &amp;&amp; carW.fuel == 1 || carE.fuel == 0 &amp;&amp; carW == null || carE.fuel == 0 &amp;&amp; carS.fuel == 1 || carE.fuel == 0 &amp;&amp; carS.fuel == -1 || carE.fuel == 0 &amp;&amp; carS == null) {&#10;			this.send('OWEST',carE);&#10;		}&#10;		//carE left priority&#10;		else if(carE.fuel == -1 &amp;&amp; carW == null || carE.fuel == -1 &amp;&amp; carS.fuel == 1 || carE.fuel == -1 &amp;&amp; carS == null) {&#10;			this.send('OSOUTH',carE);&#10;		}&#10;		//carS left priority&#10;		else if(carS.fuel == -1 &amp;&amp; carW.fuel == 0 || carS.fuel == -1 &amp;&amp; carW == null || carS.fuel == -1 &amp;&amp; carE == null) {&#10;			this.send('OWEST',carS);&#10;		}&#10;		//carS right priority&#10;		else if(carS.fuel == 1 &amp;&amp; carW.fuel == 0 || carS.fuel == 1 &amp;&amp; carW.fuel == 1 || carS.fuel == 1 &amp;&amp; carW == null || carS.fuel == 1 &amp;&amp; carE.fuel == 0 || carS.fuel == 1 &amp;&amp; carE.fuel == -1 || carS.fuel == -1 &amp;&amp; carE == null) {&#10;			this.send('OEAST',carS);&#10;		}&#10;		} catch(TypeError) {&#10;		}&#10;	}&#10;}&#10;&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[305.0, 465.0]">
            </property>
            <port name="error" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="script" class="ptolemy.actor.parameters.ParameterPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                </property>
            </port>
            <port name="carWEST" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="carEAST" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="carSOUTH" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="OWEST" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="OEAST" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="OSOUTH" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
            <port name="waitW" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="waitE" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="waitS" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                </property>
            </port>
        </entity>
        <entity name="IntersectionQueue" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//A queue that manages car that wait in a intersection&#10;exports.setup = function () {&#10;	this.input('incomingCar');&#10;	this.input('wait');&#10;	this.output('check');&#10;}&#10;&#10;exports.initialize = function() {&#10;	var queue = [];&#10;	&#10;	//Adds a car to the end of the queue&#10;	this.addInputHandler('incomingCar', function() {&#10;		carIncoming = this.get('incomingCar');&#10;		queue.unshift(carIncoming);&#10;		tryToCheck(carIncoming);&#10;	});&#10;	&#10;	//Pushs a car that has to wait at the Intersection to the front of the queue and lets it wait for a specific time&#10;	this.addInputHandler('wait', function() {&#10;		carWait = this.get('wait');&#10;		queue.push(carWait);&#10;		setTimeout(tryToCheck(carWait), 3000);&#10;	});&#10;	&#10;	//Checks if the car is ther first in the queue and sends it to the Intersection&#10;	function tryToCheck(car) {&#10;		if(queue[queue.length-1] == car) {&#10;			queue.pop();&#10;			this.send('check', car);&#10;		}&#10;	}&#10;}&#10;&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[210.0, 385.0]">
            </property>
            <port name="incomingCar" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="wait" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="check" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="defaultValue" class="ptolemy.data.expr.Parameter">
                </property>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
        </entity>
        <entity name="IntersectionQueue2" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//A queue that manages car that wait in a intersection&#10;exports.setup = function () {&#10;	this.input('incomingCar');&#10;	this.input('wait');&#10;	this.output('check');&#10;}&#10;&#10;exports.initialize = function() {&#10;	var queue = [];&#10;	&#10;	//Adds a car to the end of the queue&#10;	this.addInputHandler('incomingCar', function() {&#10;		carIncoming = this.get('incomingCar');&#10;		queue.unshift(carIncoming);&#10;		tryToCheck(carIncoming);&#10;	});&#10;	&#10;	//Pushs a car that has to wait at the Intersection to the front of the queue and lets it wait for a specific time&#10;	this.addInputHandler('wait', function() {&#10;		carWait = this.get('wait');&#10;		queue.push(carWait);&#10;		setTimeout(tryToCheck(carWait), 3000);&#10;	});&#10;	&#10;	//Checks if the car is ther first in the queue and sends it to the Intersection&#10;	function tryToCheck(car) {&#10;		if(queue[queue.length-1] == car) {&#10;			queue.pop();&#10;			this.send('check', car);&#10;		}&#10;	}&#10;}&#10;&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[220.0, 605.0]">
            </property>
            <port name="incomingCar" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="wait" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="check" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
        </entity>
        <entity name="IntersectionQueue3" class="ptolemy.actor.lib.jjs.JavaScript">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
            </property>
            <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
            </property>
            <property name="script" class="ptolemy.actor.parameters.PortParameter" value="//A queue that manages car that wait in a intersection&#10;exports.setup = function () {&#10;	this.input('incomingCar');&#10;	this.input('wait');&#10;	this.output('check');&#10;}&#10;&#10;exports.initialize = function() {&#10;	var queue = [];&#10;	&#10;	//Adds a car to the end of the queue&#10;	this.addInputHandler('incomingCar', function() {&#10;		carIncoming = this.get('incomingCar');&#10;		queue.unshift(carIncoming);&#10;		tryToCheck(carIncoming);&#10;	});&#10;	&#10;	//Pushs a car that has to wait at the Intersection to the front of the queue and lets it wait for a specific time&#10;	this.addInputHandler('wait', function() {&#10;		carWait = this.get('wait');&#10;		queue.push(carWait);&#10;		setTimeout(tryToCheck(carWait), 3000);&#10;	});&#10;	&#10;	//Checks if the car is ther first in the queue and sends it to the Intersection&#10;	function tryToCheck(car) {&#10;		if(queue[queue.length-1] == car) {&#10;			queue.pop();&#10;			this.send('check', car);&#10;		}&#10;	}&#10;}&#10;&#10;">
                <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                    <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                    </property>
                </property>
            </property>
            <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
                <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[430.0, 345.0]">
            </property>
            <port name="incomingCar" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                </property>
            </port>
            <port name="wait" class="ptolemy.actor.TypedIOPort">
                <property name="input"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
            <port name="check" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                </property>
            </port>
        </entity>
        <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation9" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation10" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation12" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        </relation>
        <relation name="relation14" class="ptolemy.actor.TypedIORelation">
        </relation>
        <link port="westIn" relation="relation"/>
        <link port="eastOut" relation="relation8"/>
        <link port="southOut" relation="relation7"/>
        <link port="westOut" relation="relation9"/>
        <link port="southIn" relation="relation3"/>
        <link port="eastIn" relation="relation4"/>
        <link port="SetIndicatorWEST.output" relation="relation2"/>
        <link port="SetIndicatorWEST.car" relation="relation"/>
        <link port="SetIndicatorSOUTH.output" relation="relation5"/>
        <link port="SetIndicatorSOUTH.car" relation="relation3"/>
        <link port="SetIndicatorEAST.output" relation="relation6"/>
        <link port="SetIndicatorEAST.car" relation="relation4"/>
<<<<<<< HEAD
        <link port="T-Intersection Right-Hand-Rule.carWEST" relation="relation10"/>
        <link port="T-Intersection Right-Hand-Rule.carEAST" relation="relation14"/>
        <link port="T-Intersection Right-Hand-Rule.carSOUTH" relation="relation12"/>
        <link port="T-Intersection Right-Hand-Rule.OWEST" relation="relation9"/>
        <link port="T-Intersection Right-Hand-Rule.OEAST" relation="relation8"/>
        <link port="T-Intersection Right-Hand-Rule.OSOUTH" relation="relation7"/>
        <link port="IntersectionQueue.incomingCar" relation="relation2"/>
        <link port="IntersectionQueue.check" relation="relation10"/>
        <link port="IntersectionQueue2.incomingCar" relation="relation5"/>
        <link port="IntersectionQueue2.check" relation="relation12"/>
        <link port="IntersectionQueue3.incomingCar" relation="relation6"/>
        <link port="IntersectionQueue3.check" relation="relation14"/>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[668.75, 147.9296875]">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[589.875, 279.109375]">
        </property>
    </entity>
    <entity name="Display3" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[466.94354248046875, 293.02490234375]">
        </property>
=======
        <link port="JavaScript.carEAST" relation="relation6"/>
        <link port="JavaScript.carSOUTH" relation="relation5"/>
        <link port="JavaScript.OWEST" relation="relation9"/>
        <link port="JavaScript.OEAST" relation="relation8"/>
        <link port="JavaScript.OSOUTH" relation="relation7"/>
        <link port="Display.input" relation="relation2"/>
>>>>>>> c605e716b703b4f361af1ef99f05d732e9ab3d4f
>>>>>>> b84c8f7a72635ee9df6382f2e4cf3acd209315dd
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;CSVReader.trigger&quot;,x=255.0,y=155.0}, tail={id=&quot;PoissonClock.output&quot;,x=90.0,y=145.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
<<<<<<< HEAD
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
=======
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
>>>>>>> c605e716b703b4f361af1ef99f05d732e9ab3d4f
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="CarInput.input" relation="relation2"/>
    <link port="CarInput.output" relation="relation3"/>
    <link port="CSVReader.output" relation="relation2"/>
    <link port="CSVReader.trigger" relation="relation"/>
    <link port="PoissonClock.output" relation="relation"/>
<<<<<<< HEAD
    <link port="Intersection.west" relation="relation3"/>
    <link port="Intersection.south" relation="relation5"/>
    <link port="Intersection2.west" relation="relation4"/>
    <link port="Intersection2.north" relation="relation5"/>
=======
    <link port="T-Intersection.westIn" relation="relation3"/>
<<<<<<< HEAD
    <link port="T-Intersection.eastOut" relation="relation4"/>
    <link port="T-Intersection.southOut" relation="relation5"/>
    <link port="T-Intersection.westOut" relation="relation6"/>
    <link port="Display.input" relation="relation4"/>
    <link port="Display2.input" relation="relation5"/>
    <link port="Display3.input" relation="relation6"/>
=======
>>>>>>> c605e716b703b4f361af1ef99f05d732e9ab3d4f
>>>>>>> b84c8f7a72635ee9df6382f2e4cf3acd209315dd
</entity>
